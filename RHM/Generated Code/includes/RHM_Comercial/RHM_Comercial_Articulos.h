#import "sybase_sup.h"
#import "SUPAnnotations.h"

#import "SUPAbstractEntity.h"
#import "SUPObjectList.h"
#import "SUPLogRecord.h"
#import "SUPMobileBusinessObject.h"
#import "RHM_Comercial_RHM_ComercialDB.h"
#import "RHM_Comercial_PersonalizationParameters.h"
#import "RHM_Comercial_SynchronizationGroup.h"


@class SUPEntityMetaData;
@class SUPQuery;

// public interface declaration, can be used by application. 
/*!
 @class RHM_Comercial_Articulos
 @abstract This class is part of package "RHM_Comercial:1.0"
 @discussion Generated by Sybase Unwired Platform, compiler version 2.0.1.314
*/ 
@interface RHM_Comercial_Articulos : SUPAbstractEntity<SUPMobileBusinessObject>
{
@private
    NSString* _BUKRS;
    NSString* _MATNR;
    NSString* _BOLETIN;
    NSString* _MAKTX;
    NSString* _ZZTITMANUS;
    NSString* _ZZTITULO;
    NSString* _ZZSUBTIT;
    NSString* _ZZDADVE;
    NSString* _ZZSELLO;
    NSString* _ZZLINEA;
    NSString* _ZZCOLECCION;
    NSString* _ZZCODNEG;
    NSString* _ZZDACED;
    NSString* _ZZNAJE;
    NSString* _ZZDATGE;
    NSDate* _ZZFECHAV;
    NSDate* _ZZNOVEDAD;
    NSString* _ZZCODTEM;
    NSString* _MTART;
    NSString* _EAN11;
    NSString* _ZZARTCAT;
    NSString* _ESTADO_RHM;
    NSString* _FECHADISP;
    NSString* _ZZCGMAN;
    NSString* _ZZCODAUTC;
    NSNumber* _ZZCIVAVIG;
    NSNumber* _ZZSIVAVIG;
    NSString* _EDICION;
    int32_t _TIRAJE_STD;
    NSString* _AMBITO;
    NSString* _ZZIDIOPU;
    NSString* _ZZIDIOOR;
    NSString* _ZZCATMOV;
    NSNumber* _PRVRE;
    NSString* _ZZTIPOTAPA;
    NSString* _ZZTIPENC;
    NSString* _ZZFORMATO;
    NSString* _ZZPAGS;
    NSNumber* _LAENG;
    NSNumber* _BREIT;
    NSString* _ZZARTCOL;
    NSString* _ZZARTBIB;
    NSString* _WAERS;
    NSString* _MEABM;
    NSString* _IHIVI;
    int64_t _surrogateKey;
}

@property(retain,nonatomic) NSString* BUKRS;
@property(retain,nonatomic) NSString* MATNR;
@property(retain,nonatomic) NSString* BOLETIN;
@property(retain,nonatomic) NSString* MAKTX;
@property(retain,nonatomic) NSString* ZZTITMANUS;
@property(retain,nonatomic) NSString* ZZTITULO;
@property(retain,nonatomic) NSString* ZZSUBTIT;
@property(retain,nonatomic) NSString* ZZDADVE;
@property(retain,nonatomic) NSString* ZZSELLO;
@property(retain,nonatomic) NSString* ZZLINEA;
@property(retain,nonatomic) NSString* ZZCOLECCION;
@property(retain,nonatomic) NSString* ZZCODNEG;
@property(retain,nonatomic) NSString* ZZDACED;
@property(retain,nonatomic) NSString* ZZNAJE;
@property(retain,nonatomic) NSString* ZZDATGE;
@property(retain,nonatomic) NSDate* ZZFECHAV;
@property(retain,nonatomic) NSDate* ZZNOVEDAD;
@property(retain,nonatomic) NSString* ZZCODTEM;
@property(retain,nonatomic) NSString* MTART;
@property(retain,nonatomic) NSString* EAN11;
@property(retain,nonatomic) NSString* ZZARTCAT;
@property(retain,nonatomic) NSString* ESTADO_RHM;
@property(retain,nonatomic) NSString* FECHADISP;
@property(retain,nonatomic) NSString* ZZCGMAN;
@property(retain,nonatomic) NSString* ZZCODAUTC;
@property(retain,nonatomic) NSNumber* ZZCIVAVIG;
@property(retain,nonatomic) NSNumber* ZZSIVAVIG;
@property(retain,nonatomic) NSString* EDICION;
@property(assign,nonatomic) int32_t TIRAJE_STD;
@property(retain,nonatomic) NSString* AMBITO;
@property(retain,nonatomic) NSString* ZZIDIOPU;
@property(retain,nonatomic) NSString* ZZIDIOOR;
@property(retain,nonatomic) NSString* ZZCATMOV;
@property(retain,nonatomic) NSNumber* PRVRE;
@property(retain,nonatomic) NSString* ZZTIPOTAPA;
@property(retain,nonatomic) NSString* ZZTIPENC;
@property(retain,nonatomic) NSString* ZZFORMATO;
@property(retain,nonatomic) NSString* ZZPAGS;
@property(retain,nonatomic) NSNumber* LAENG;
@property(retain,nonatomic) NSNumber* BREIT;
@property(retain,nonatomic) NSString* ZZARTCOL;
@property(retain,nonatomic) NSString* ZZARTBIB;
@property(retain,nonatomic) NSString* WAERS;
@property(retain,nonatomic) NSString* MEABM;
@property(retain,nonatomic) NSString* IHIVI;
@property(assign,nonatomic) int64_t surrogateKey;

- (void)dealloc;
/*!
  @method 
  @abstract Sets relationship attributes to null to save memory (they will be retrieved from the DB on the next getter call or property reference)
  @discussion
  @throws SUPPersistenceException
 */
- (void)clearRelationshipObjects;
/*!
  @method 
  @abstract Create this entity row in the database
  @discussion
  @throws SUPPersistenceException
 */
- (void)create;
/*!
  @method 
  @abstract Update this entity row in the database
  @discussion
  @throws SUPPersistenceException
 */
- (void)update;
/*!
  @method 
  @abstract Delete this entity row from the database
  @discussion
  @throws SUPPersistenceException
 */
- (void)delete;
/*!
  @method 
  @abstract Copy all attributes (except relationships) from 'other' to this entity
  @discussion
 */
- (void)copyAll:(RHM_Comercial_Articulos*)other;
/*!
  @method 
  @abstract Returns the number of entity rows satisfying this query
  @discussion
  @throws SUPPersistenceException
 */
+ (int32_t)countWithQuery:(SUPQuery*)query;
/*!
  @method 
  @abstract Returns the entity for the primary key value passed in, or null if the entity is not found.
  @discussion
  @throws SUPPersistenceException
 */
+ (RHM_Comercial_Articulos*)find:(int64_t)id;
/*!
  @method 
  @abstract Same as the find method above, but takes a string representation of the primary key as its parameter.
  @discussion
  @throws SUPPersistenceException
 */
+ (RHM_Comercial_Articulos*)find_by_id_string:(NSString*)id_string;
/*!
  @method 
  @abstract Returns an SUPObjectList of entity rows satisfying this query
  @discussion
  @throws SUPPersistenceException
 */
+ (SUPObjectList*)findWithQuery:(SUPQuery*)query;
/*!
  @method 
  @abstract Return the synchronization group for this MBO class
  @discussion
 */
+ (id<SUPSynchronizationGroup>)getSynchronizationGroup;
/*!
  @method 
  @abstract Returns the primary key for this entity.
  @discussion
 */
- (int64_t)_pk;
- (int64_t)id;
/*!
  @method 
  @abstract Returns the primary key for this entity as a string.
  @discussion
 */
- (NSString*)keyToString;
/*!
  @method 
  @abstract Returns the entity for the primary key value passed in; throws an exception if the entity is not found.
  @discussion
  @throws SUPPersistenceException
 */
+ (RHM_Comercial_Articulos*)load:(int64_t)id;
+ (SUPEntityMetaData*)metaData;
/*!
  @method 
  @abstract Creates a new autoreleased instance of this class
  @discussion
 */
+ (RHM_Comercial_Articulos*)getInstance;
/*!
  @method 
  @abstract Returns an SUPObjectList of log records for this entity.
  @discussion
  @throws SUPPersistenceException
 */
- (SUPObjectList*)getLogRecords;
/*!
  @method 
  @abstract Creates a new log record for this entity.
  @discussion
  @throws SUPPersistenceException
 */
- (id<SUPLogRecord>)createLogRecord:(int32_t)level withMessage:(NSString*)message;
/*!
  @method 
  @abstract Saves (creates or updates) this entity in the database.
  @discussion
  @throws SUPPersistenceException
 */
- (void)save;
/*!
  @method 
  @abstract Return a string description of this entity.
  @discussion
 */
- (NSString*)toString;
/*!
  @method 
  @abstract Return a string description of this entity.
  @discussion
 */
- (NSString*)description;
/*!
  @method 
  @abstract If this entity has pending changes, submits those changes to the server.
  @discussion
  @throws SUPPersistenceException
 */
- (void)submitPending;
/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)findAll;

/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @param skip
  @param take
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)findAll:(int32_t)skip take:(int32_t)take;
/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)getPendingObjects;

/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @param skip
  @param take
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)getPendingObjects:(int32_t)skip take:(int32_t)take;
/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @param pendingChange
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)getPendingObjects:(unichar)pendingChange;

/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @param pendingChange
  @param skip
  @param take
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)getPendingObjects:(unichar)pendingChange skip:(int32_t)skip take:(int32_t)take;
/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)getReplayPendingObjects;

/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @param skip
  @param take
  @throws SUPPersistenceException
 */

+ (SUPObjectList*)getReplayPendingObjects:(int32_t)skip take:(int32_t)take;
/*!
  @method
  @abstract Generated class method 
  @param query
  @throws SUPPersistenceException
 */
+ (int32_t)getSize:(SUPQuery*)query;
/*!
  @method
  @abstract Generated from an object query defined in the Eclipse tooling project for this package
  @throws SUPPersistenceException
 */

+ (int32_t)countReplayPendingObjects;


@end

typedef SUPObjectList RHM_Comercial_ArticulosList;

// internal methods declaration, only used by generated code.
@interface RHM_Comercial_Articulos(internal)


- (id)initFromJson:(SUPJsonObject*)json:(int32_t)flags;
- (void)readJson:(SUPJsonObject*)json:(int32_t)flags;
- (SUPJsonObject*)json:(int32_t)flags;
+ (SUPObjectList*)fromJSONList:(SUPJsonArray*)jsonArray NS_RETURNS_RETAINED;
+ (SUPJsonArray*)toJSONList:(SUPObjectList*)instanceList;


- (RHM_Comercial_RHM_ComercialDB*)database;
- (SUPAbstractEntity*)topLevelParent;
- (void)submitPendingNoRefresh;
- (void)submitPending1:(BOOL)doRefresh;
- (void)cancelReplayPending:(SUPAbstractEntity*)entity;
- (void)cancelPending_OnlyReplayPending:(BOOL)replayPendingOnly:(SUPAbstractEntity*)entity;
@end