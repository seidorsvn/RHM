/*
 Generated by Sybase Unwired Platform 
 Compiler version - 2.0.1.314
*/ 

#import "RHM_Comercial_Articulos.h"
#import "SUPJsonObject.h"
#import "SUPJsonArray.h"
#import "SUPJsonMessage.h"
#import "SUPJsonReader.h"
#import "SUPConnectionWrapper.h"
#import "SUPLocalTransaction.h"
#import "SUPObjectNotFoundException.h"
#import "SUPNoSuchOperationException.h"
#import "SUPQuery.h"
#import "SUPQueueConnection.h"
#import "SUPResultSetWrapper.h"
#import "SUPStatementWrapper.h"
#import "SUPStatementBuilder.h"
#import "SUPEntityMetaData.h"
#import "SUPOperationMetaData.h"
#import "SUPAttributeMetaData.h"
#import "SUPAttributeMetaData_DC.h"
#import "SUPDatabaseMetaData.h"
#import "SUPSelectItem.h"
#import "SUPAttributeMap.h"
#import "SUPOperationMap.h"
#import "SUPDataType.h"
#import "MBODebugLogger.h"
#import "RHM_Comercial_RHM_ComercialDB.h"
#import "RHM_Comercial_KeyGenerator.h"
#import "RHM_Comercial_LocalKeyGenerator.h"
#import "RHM_Comercial_KeyGeneratorPK.h"
#import "RHM_Comercial_LocalKeyGeneratorPK.h"
#import "RHM_Comercial_LogRecordImpl.h"
#import "SUPCallbackHandler.h"
#import "RHM_Comercial_Clientes.h"
#import "MBODebugSettings.h"
#import "SUPEntityAlias.h"

static NSObject<SUPCallbackHandler>* _callbackHandler = nil;

@interface RHM_Comercial_Articulos(private)
- (void)bind:(id<SUPResultSetWrapper>)resultSet;
- (void)bindWithQuery:(id<SUPResultSetWrapper>)resultSet:(SUPQuery*)query;
+ (RHM_Comercial_Articulos*)find:(int64_t)id inTable:(SUPEntityTable)table;
+ (void)importData:(RHM_Comercial_Articulos*)serverEntity:(SUPJsonObject*)jsonObject;
- (void)merge:(RHM_Comercial_Articulos*)entity withJson:(SUPJsonObject*)json;
- (void)setAllAttributesFrom:(RHM_Comercial_Articulos*)other;
@end
@implementation RHM_Comercial_Articulos

@synthesize BUKRS = _BUKRS;
@synthesize MATNR = _MATNR;
@synthesize BOLETIN = _BOLETIN;
@synthesize MAKTX = _MAKTX;
@synthesize ZZTITMANUS = _ZZTITMANUS;
@synthesize ZZTITULO = _ZZTITULO;
@synthesize ZZSUBTIT = _ZZSUBTIT;
@synthesize ZZDADVE = _ZZDADVE;
@synthesize ZZSELLO = _ZZSELLO;
@synthesize ZZLINEA = _ZZLINEA;
@synthesize ZZCOLECCION = _ZZCOLECCION;
@synthesize ZZCODNEG = _ZZCODNEG;
@synthesize ZZDACED = _ZZDACED;
@synthesize ZZNAJE = _ZZNAJE;
@synthesize ZZDATGE = _ZZDATGE;
@synthesize ZZFECHAV = _ZZFECHAV;
@synthesize ZZNOVEDAD = _ZZNOVEDAD;
@synthesize ZZCODTEM = _ZZCODTEM;
@synthesize MTART = _MTART;
@synthesize EAN11 = _EAN11;
@synthesize ZZARTCAT = _ZZARTCAT;
@synthesize ESTADO_RHM = _ESTADO_RHM;
@synthesize FECHADISP = _FECHADISP;
@synthesize ZZCGMAN = _ZZCGMAN;
@synthesize ZZCODAUTC = _ZZCODAUTC;
@synthesize ZZCIVAVIG = _ZZCIVAVIG;
@synthesize ZZSIVAVIG = _ZZSIVAVIG;
@synthesize EDICION = _EDICION;
@synthesize TIRAJE_STD = _TIRAJE_STD;
@synthesize AMBITO = _AMBITO;
@synthesize ZZIDIOPU = _ZZIDIOPU;
@synthesize ZZIDIOOR = _ZZIDIOOR;
@synthesize ZZCATMOV = _ZZCATMOV;
@synthesize PRVRE = _PRVRE;
@synthesize ZZTIPOTAPA = _ZZTIPOTAPA;
@synthesize ZZTIPENC = _ZZTIPENC;
@synthesize ZZFORMATO = _ZZFORMATO;
@synthesize ZZPAGS = _ZZPAGS;
@synthesize LAENG = _LAENG;
@synthesize BREIT = _BREIT;
@synthesize ZZARTCOL = _ZZARTCOL;
@synthesize ZZARTBIB = _ZZARTBIB;
@synthesize WAERS = _WAERS;
@synthesize MEABM = _MEABM;
@synthesize IHIVI = _IHIVI;
@synthesize surrogateKey = _surrogateKey;

- (int64_t)surrogateKey
{
    if (_surrogateKey == 0)
        _surrogateKey = (int64_t)[RHM_Comercial_KeyGenerator generateId];
    return _surrogateKey;
}

- (void)setBUKRS:(NSString*)newBUKRS
{
    if (newBUKRS != self->_BUKRS)
    {
		[self->_BUKRS release];
        self->_BUKRS = [newBUKRS retain];
        self->_isDirty = YES;
    }
}

- (void)setMATNR:(NSString*)newMATNR
{
    if (newMATNR != self->_MATNR)
    {
		[self->_MATNR release];
        self->_MATNR = [newMATNR retain];
        self->_isDirty = YES;
    }
}

- (void)setBOLETIN:(NSString*)newBOLETIN
{
    if (newBOLETIN != self->_BOLETIN)
    {
		[self->_BOLETIN release];
        self->_BOLETIN = [newBOLETIN retain];
        self->_isDirty = YES;
    }
}

- (void)setMAKTX:(NSString*)newMAKTX
{
    if (newMAKTX != self->_MAKTX)
    {
		[self->_MAKTX release];
        self->_MAKTX = [newMAKTX retain];
        self->_isDirty = YES;
    }
}

- (void)setZZTITMANUS:(NSString*)newZZTITMANUS
{
    if (newZZTITMANUS != self->_ZZTITMANUS)
    {
		[self->_ZZTITMANUS release];
        self->_ZZTITMANUS = [newZZTITMANUS retain];
        self->_isDirty = YES;
    }
}

- (void)setZZTITULO:(NSString*)newZZTITULO
{
    if (newZZTITULO != self->_ZZTITULO)
    {
		[self->_ZZTITULO release];
        self->_ZZTITULO = [newZZTITULO retain];
        self->_isDirty = YES;
    }
}

- (void)setZZSUBTIT:(NSString*)newZZSUBTIT
{
    if (newZZSUBTIT != self->_ZZSUBTIT)
    {
		[self->_ZZSUBTIT release];
        self->_ZZSUBTIT = [newZZSUBTIT retain];
        self->_isDirty = YES;
    }
}

- (void)setZZDADVE:(NSString*)newZZDADVE
{
    if (newZZDADVE != self->_ZZDADVE)
    {
		[self->_ZZDADVE release];
        self->_ZZDADVE = [newZZDADVE retain];
        self->_isDirty = YES;
    }
}

- (void)setZZSELLO:(NSString*)newZZSELLO
{
    if (newZZSELLO != self->_ZZSELLO)
    {
		[self->_ZZSELLO release];
        self->_ZZSELLO = [newZZSELLO retain];
        self->_isDirty = YES;
    }
}

- (void)setZZLINEA:(NSString*)newZZLINEA
{
    if (newZZLINEA != self->_ZZLINEA)
    {
		[self->_ZZLINEA release];
        self->_ZZLINEA = [newZZLINEA retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCOLECCION:(NSString*)newZZCOLECCION
{
    if (newZZCOLECCION != self->_ZZCOLECCION)
    {
		[self->_ZZCOLECCION release];
        self->_ZZCOLECCION = [newZZCOLECCION retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCODNEG:(NSString*)newZZCODNEG
{
    if (newZZCODNEG != self->_ZZCODNEG)
    {
		[self->_ZZCODNEG release];
        self->_ZZCODNEG = [newZZCODNEG retain];
        self->_isDirty = YES;
    }
}

- (void)setZZDACED:(NSString*)newZZDACED
{
    if (newZZDACED != self->_ZZDACED)
    {
		[self->_ZZDACED release];
        self->_ZZDACED = [newZZDACED retain];
        self->_isDirty = YES;
    }
}

- (void)setZZNAJE:(NSString*)newZZNAJE
{
    if (newZZNAJE != self->_ZZNAJE)
    {
		[self->_ZZNAJE release];
        self->_ZZNAJE = [newZZNAJE retain];
        self->_isDirty = YES;
    }
}

- (void)setZZDATGE:(NSString*)newZZDATGE
{
    if (newZZDATGE != self->_ZZDATGE)
    {
		[self->_ZZDATGE release];
        self->_ZZDATGE = [newZZDATGE retain];
        self->_isDirty = YES;
    }
}

- (void)setZZFECHAV:(NSDate*)newZZFECHAV
{
    if (newZZFECHAV != self->_ZZFECHAV)
    {
		[self->_ZZFECHAV release];
        self->_ZZFECHAV = [newZZFECHAV retain];
        self->_isDirty = YES;
    }
}

- (void)setZZNOVEDAD:(NSDate*)newZZNOVEDAD
{
    if (newZZNOVEDAD != self->_ZZNOVEDAD)
    {
		[self->_ZZNOVEDAD release];
        self->_ZZNOVEDAD = [newZZNOVEDAD retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCODTEM:(NSString*)newZZCODTEM
{
    if (newZZCODTEM != self->_ZZCODTEM)
    {
		[self->_ZZCODTEM release];
        self->_ZZCODTEM = [newZZCODTEM retain];
        self->_isDirty = YES;
    }
}

- (void)setMTART:(NSString*)newMTART
{
    if (newMTART != self->_MTART)
    {
		[self->_MTART release];
        self->_MTART = [newMTART retain];
        self->_isDirty = YES;
    }
}

- (void)setEAN11:(NSString*)newEAN11
{
    if (newEAN11 != self->_EAN11)
    {
		[self->_EAN11 release];
        self->_EAN11 = [newEAN11 retain];
        self->_isDirty = YES;
    }
}

- (void)setZZARTCAT:(NSString*)newZZARTCAT
{
    if (newZZARTCAT != self->_ZZARTCAT)
    {
		[self->_ZZARTCAT release];
        self->_ZZARTCAT = [newZZARTCAT retain];
        self->_isDirty = YES;
    }
}

- (void)setESTADO_RHM:(NSString*)newESTADO_RHM
{
    if (newESTADO_RHM != self->_ESTADO_RHM)
    {
		[self->_ESTADO_RHM release];
        self->_ESTADO_RHM = [newESTADO_RHM retain];
        self->_isDirty = YES;
    }
}

- (void)setFECHADISP:(NSString*)newFECHADISP
{
    if (newFECHADISP != self->_FECHADISP)
    {
		[self->_FECHADISP release];
        self->_FECHADISP = [newFECHADISP retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCGMAN:(NSString*)newZZCGMAN
{
    if (newZZCGMAN != self->_ZZCGMAN)
    {
		[self->_ZZCGMAN release];
        self->_ZZCGMAN = [newZZCGMAN retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCODAUTC:(NSString*)newZZCODAUTC
{
    if (newZZCODAUTC != self->_ZZCODAUTC)
    {
		[self->_ZZCODAUTC release];
        self->_ZZCODAUTC = [newZZCODAUTC retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCIVAVIG:(NSNumber*)newZZCIVAVIG
{
    if (newZZCIVAVIG != self->_ZZCIVAVIG)
    {
		[self->_ZZCIVAVIG release];
        self->_ZZCIVAVIG = [newZZCIVAVIG retain];
        self->_isDirty = YES;
    }
}

- (void)setZZSIVAVIG:(NSNumber*)newZZSIVAVIG
{
    if (newZZSIVAVIG != self->_ZZSIVAVIG)
    {
		[self->_ZZSIVAVIG release];
        self->_ZZSIVAVIG = [newZZSIVAVIG retain];
        self->_isDirty = YES;
    }
}

- (void)setEDICION:(NSString*)newEDICION
{
    if (newEDICION != self->_EDICION)
    {
		[self->_EDICION release];
        self->_EDICION = [newEDICION retain];
        self->_isDirty = YES;
    }
}

- (void)setTIRAJE_STD:(int32_t)newTIRAJE_STD
{
    if (newTIRAJE_STD != self->_TIRAJE_STD)
    {
        self->_TIRAJE_STD = newTIRAJE_STD;
        self->_isDirty = YES;
    }
}

- (void)setAMBITO:(NSString*)newAMBITO
{
    if (newAMBITO != self->_AMBITO)
    {
		[self->_AMBITO release];
        self->_AMBITO = [newAMBITO retain];
        self->_isDirty = YES;
    }
}

- (void)setZZIDIOPU:(NSString*)newZZIDIOPU
{
    if (newZZIDIOPU != self->_ZZIDIOPU)
    {
		[self->_ZZIDIOPU release];
        self->_ZZIDIOPU = [newZZIDIOPU retain];
        self->_isDirty = YES;
    }
}

- (void)setZZIDIOOR:(NSString*)newZZIDIOOR
{
    if (newZZIDIOOR != self->_ZZIDIOOR)
    {
		[self->_ZZIDIOOR release];
        self->_ZZIDIOOR = [newZZIDIOOR retain];
        self->_isDirty = YES;
    }
}

- (void)setZZCATMOV:(NSString*)newZZCATMOV
{
    if (newZZCATMOV != self->_ZZCATMOV)
    {
		[self->_ZZCATMOV release];
        self->_ZZCATMOV = [newZZCATMOV retain];
        self->_isDirty = YES;
    }
}

- (void)setPRVRE:(NSNumber*)newPRVRE
{
    if (newPRVRE != self->_PRVRE)
    {
		[self->_PRVRE release];
        self->_PRVRE = [newPRVRE retain];
        self->_isDirty = YES;
    }
}

- (void)setZZTIPOTAPA:(NSString*)newZZTIPOTAPA
{
    if (newZZTIPOTAPA != self->_ZZTIPOTAPA)
    {
		[self->_ZZTIPOTAPA release];
        self->_ZZTIPOTAPA = [newZZTIPOTAPA retain];
        self->_isDirty = YES;
    }
}

- (void)setZZTIPENC:(NSString*)newZZTIPENC
{
    if (newZZTIPENC != self->_ZZTIPENC)
    {
		[self->_ZZTIPENC release];
        self->_ZZTIPENC = [newZZTIPENC retain];
        self->_isDirty = YES;
    }
}

- (void)setZZFORMATO:(NSString*)newZZFORMATO
{
    if (newZZFORMATO != self->_ZZFORMATO)
    {
		[self->_ZZFORMATO release];
        self->_ZZFORMATO = [newZZFORMATO retain];
        self->_isDirty = YES;
    }
}

- (void)setZZPAGS:(NSString*)newZZPAGS
{
    if (newZZPAGS != self->_ZZPAGS)
    {
		[self->_ZZPAGS release];
        self->_ZZPAGS = [newZZPAGS retain];
        self->_isDirty = YES;
    }
}

- (void)setLAENG:(NSNumber*)newLAENG
{
    if (newLAENG != self->_LAENG)
    {
		[self->_LAENG release];
        self->_LAENG = [newLAENG retain];
        self->_isDirty = YES;
    }
}

- (void)setBREIT:(NSNumber*)newBREIT
{
    if (newBREIT != self->_BREIT)
    {
		[self->_BREIT release];
        self->_BREIT = [newBREIT retain];
        self->_isDirty = YES;
    }
}

- (void)setZZARTCOL:(NSString*)newZZARTCOL
{
    if (newZZARTCOL != self->_ZZARTCOL)
    {
		[self->_ZZARTCOL release];
        self->_ZZARTCOL = [newZZARTCOL retain];
        self->_isDirty = YES;
    }
}

- (void)setZZARTBIB:(NSString*)newZZARTBIB
{
    if (newZZARTBIB != self->_ZZARTBIB)
    {
		[self->_ZZARTBIB release];
        self->_ZZARTBIB = [newZZARTBIB retain];
        self->_isDirty = YES;
    }
}

- (void)setWAERS:(NSString*)newWAERS
{
    if (newWAERS != self->_WAERS)
    {
		[self->_WAERS release];
        self->_WAERS = [newWAERS retain];
        self->_isDirty = YES;
    }
}

- (void)setMEABM:(NSString*)newMEABM
{
    if (newMEABM != self->_MEABM)
    {
		[self->_MEABM release];
        self->_MEABM = [newMEABM retain];
        self->_isDirty = YES;
    }
}

- (void)setIHIVI:(NSString*)newIHIVI
{
    if (newIHIVI != self->_IHIVI)
    {
		[self->_IHIVI release];
        self->_IHIVI = [newIHIVI retain];
        self->_isDirty = YES;
    }
}

- (void)setSurrogateKey:(int64_t)newSurrogateKey
{
    if (newSurrogateKey != self->_surrogateKey)
    {
        self->_surrogateKey = newSurrogateKey;
        self->_isNew = YES;
    }
}


- (SUPLong)replayCounter
{
    if ((_replayCounter == 0))
    {  
        _replayCounter = ((SUPLong)([RHM_Comercial_LocalKeyGenerator generateId]));
    }
    return _replayCounter;
}

- (void)setReplayCounter:(SUPLong)newReplayCounter
{
    if (! ((_replayCounter == newReplayCounter)))
    {  
        self->_isDirty = YES;
        _replayCounter = newReplayCounter;
    }
}

- (id)initFromJson:(SUPJsonObject*)json:(int32_t)flags
{
    if (json == nil)
    {
        [self release];
        return nil;
    }
    if ((self = [super init]))
    {
        [self readJson:json:flags];
    }
    return self;   
}

- (void)readJson:(SUPJsonObject*)json:(int32_t)flags
{
        if ([json containsKey:@"BUKRS"])
    {
        self.BUKRS = [json getString:@"BUKRS"];
    }
        if ([json containsKey:@"MATNR"])
    {
        self.MATNR = [json getString:@"MATNR"];
    }
        if ([json containsKey:@"BOLETIN"])
    {
        self.BOLETIN = [json getString:@"BOLETIN"];
    }
        if ([json containsKey:@"MAKTX"])
    {
        self.MAKTX = [json getString:@"MAKTX"];
    }
        if ([json containsKey:@"ZZTITMANUS"])
    {
        self.ZZTITMANUS = [json getString:@"ZZTITMANUS"];
    }
        if ([json containsKey:@"ZZTITULO"])
    {
        self.ZZTITULO = [json getString:@"ZZTITULO"];
    }
        if ([json containsKey:@"ZZSUBTIT"])
    {
        self.ZZSUBTIT = [json getString:@"ZZSUBTIT"];
    }
        if ([json containsKey:@"ZZDADVE"])
    {
        self.ZZDADVE = [json getString:@"ZZDADVE"];
    }
        if ([json containsKey:@"ZZSELLO"])
    {
        self.ZZSELLO = [json getString:@"ZZSELLO"];
    }
        if ([json containsKey:@"ZZLINEA"])
    {
        self.ZZLINEA = [json getString:@"ZZLINEA"];
    }
        if ([json containsKey:@"ZZCOLECCION"])
    {
        self.ZZCOLECCION = [json getString:@"ZZCOLECCION"];
    }
        if ([json containsKey:@"ZZCODNEG"])
    {
        self.ZZCODNEG = [json getString:@"ZZCODNEG"];
    }
        if ([json containsKey:@"ZZDACED"])
    {
        self.ZZDACED = [json getString:@"ZZDACED"];
    }
        if ([json containsKey:@"ZZNAJE"])
    {
        self.ZZNAJE = [json getString:@"ZZNAJE"];
    }
        if ([json containsKey:@"ZZDATGE"])
    {
        self.ZZDATGE = [json getString:@"ZZDATGE"];
    }
        if ([json containsKey:@"ZZFECHAV"])
    {
        self.ZZFECHAV = [SUPDateUtil getNullableDate_s:[json getNullableString:@"ZZFECHAV"]];
    }
        if ([json containsKey:@"ZZNOVEDAD"])
    {
        self.ZZNOVEDAD = [SUPDateUtil getNullableDate_s:[json getNullableString:@"ZZNOVEDAD"]];
    }
        if ([json containsKey:@"ZZCODTEM"])
    {
        self.ZZCODTEM = [json getString:@"ZZCODTEM"];
    }
        if ([json containsKey:@"MTART"])
    {
        self.MTART = [json getString:@"MTART"];
    }
        if ([json containsKey:@"EAN11"])
    {
        self.EAN11 = [json getString:@"EAN11"];
    }
        if ([json containsKey:@"ZZARTCAT"])
    {
        self.ZZARTCAT = [json getString:@"ZZARTCAT"];
    }
        if ([json containsKey:@"ESTADO_RHM"])
    {
        self.ESTADO_RHM = [json getString:@"ESTADO_RHM"];
    }
        if ([json containsKey:@"FECHADISP"])
    {
        self.FECHADISP = [json getString:@"FECHADISP"];
    }
        if ([json containsKey:@"ZZCGMAN"])
    {
        self.ZZCGMAN = [json getString:@"ZZCGMAN"];
    }
        if ([json containsKey:@"ZZCODAUTC"])
    {
        self.ZZCODAUTC = [json getString:@"ZZCODAUTC"];
    }
        if ([json containsKey:@"ZZCIVAVIG"])
    {
        self.ZZCIVAVIG = [json getDecimal:@"ZZCIVAVIG"];
    }
        if ([json containsKey:@"ZZSIVAVIG"])
    {
        self.ZZSIVAVIG = [json getDecimal:@"ZZSIVAVIG"];
    }
        if ([json containsKey:@"EDICION"])
    {
        self.EDICION = [json getString:@"EDICION"];
    }
        if ([json containsKey:@"TIRAJE_STD"])
    {
        self.TIRAJE_STD = [json getInt:@"TIRAJE_STD"];
    }
        if ([json containsKey:@"AMBITO"])
    {
        self.AMBITO = [json getString:@"AMBITO"];
    }
        if ([json containsKey:@"ZZIDIOPU"])
    {
        self.ZZIDIOPU = [json getString:@"ZZIDIOPU"];
    }
        if ([json containsKey:@"ZZIDIOOR"])
    {
        self.ZZIDIOOR = [json getString:@"ZZIDIOOR"];
    }
        if ([json containsKey:@"ZZCATMOV"])
    {
        self.ZZCATMOV = [json getString:@"ZZCATMOV"];
    }
        if ([json containsKey:@"PRVRE"])
    {
        self.PRVRE = [json getDecimal:@"PRVRE"];
    }
        if ([json containsKey:@"ZZTIPOTAPA"])
    {
        self.ZZTIPOTAPA = [json getString:@"ZZTIPOTAPA"];
    }
        if ([json containsKey:@"ZZTIPENC"])
    {
        self.ZZTIPENC = [json getString:@"ZZTIPENC"];
    }
        if ([json containsKey:@"ZZFORMATO"])
    {
        self.ZZFORMATO = [json getString:@"ZZFORMATO"];
    }
        if ([json containsKey:@"ZZPAGS"])
    {
        self.ZZPAGS = [json getString:@"ZZPAGS"];
    }
        if ([json containsKey:@"LAENG"])
    {
        self.LAENG = [json getDecimal:@"LAENG"];
    }
        if ([json containsKey:@"BREIT"])
    {
        self.BREIT = [json getDecimal:@"BREIT"];
    }
        if ([json containsKey:@"ZZARTCOL"])
    {
        self.ZZARTCOL = [json getString:@"ZZARTCOL"];
    }
        if ([json containsKey:@"ZZARTBIB"])
    {
        self.ZZARTBIB = [json getString:@"ZZARTBIB"];
    }
        if ([json containsKey:@"WAERS"])
    {
        self.WAERS = [json getString:@"WAERS"];
    }
        if ([json containsKey:@"MEABM"])
    {
        self.MEABM = [json getString:@"MEABM"];
    }
        if ([json containsKey:@"IHIVI"])
    {
        self.IHIVI = [json getString:@"IHIVI"];
    }
                        if ([json containsKey:@"surrogateKey"])
    {
        self.surrogateKey = [json getLong:@"surrogateKey"];
    }
            if ([json containsKey:@"disableSubmit"])
    {
        self.disableSubmit = [json getBoolean:@"disableSubmit"];
    }
    if ([json containsKey:@"_op"])
    {
    	unichar op = [json getChar:@"_op"];
    	self->_isNew = (op == PendingCreate);
    	self->_isDirty = (op == PendingUpdate);
    	self->_isDeleted = (op == PendingDelete);
    } else {
    	self->_isNew = YES;
    	self->_isDirty = NO;
    	self->_isDeleted = NO;
    }
}

- (SUPJsonObject*)json:(int32_t)flags
{
    SUPJsonObject *newJson = [[SUPJsonObject alloc] init];
	BOOL all = YES;
	if(self.isNew)
	{
	    [newJson setChar:@"_op":PendingCreate];
	}
	else
	{
		if(self.pendingChange != NotPending && self.replayCounter > self.replayPending)
		    [newJson setChar:@"_op":self.pendingChange];
	}
	[newJson setLong:@"surrogateKey":self.surrogateKey];
	if (all)
	{
	    [newJson setString:@"BUKRS":self.BUKRS];
	    [newJson setString:@"MATNR":self.MATNR];
	    [newJson setString:@"BOLETIN":self.BOLETIN];
	    [newJson setString:@"MAKTX":self.MAKTX];
	    [newJson setString:@"ZZTITMANUS":self.ZZTITMANUS];
	    [newJson setString:@"ZZTITULO":self.ZZTITULO];
	    [newJson setString:@"ZZSUBTIT":self.ZZSUBTIT];
	    [newJson setString:@"ZZDADVE":self.ZZDADVE];
	    [newJson setString:@"ZZSELLO":self.ZZSELLO];
	    [newJson setString:@"ZZLINEA":self.ZZLINEA];
	    [newJson setString:@"ZZCOLECCION":self.ZZCOLECCION];
	    [newJson setString:@"ZZCODNEG":self.ZZCODNEG];
	    [newJson setString:@"ZZDACED":self.ZZDACED];
	    [newJson setString:@"ZZNAJE":self.ZZNAJE];
	    [newJson setString:@"ZZDATGE":self.ZZDATGE];
	    [newJson setNullableDate:@"ZZFECHAV":self.ZZFECHAV];
	    [newJson setNullableDate:@"ZZNOVEDAD":self.ZZNOVEDAD];
	    [newJson setString:@"ZZCODTEM":self.ZZCODTEM];
	    [newJson setString:@"MTART":self.MTART];
	    [newJson setString:@"EAN11":self.EAN11];
	    [newJson setString:@"ZZARTCAT":self.ZZARTCAT];
	    [newJson setString:@"ESTADO_RHM":self.ESTADO_RHM];
	    [newJson setString:@"FECHADISP":self.FECHADISP];
	    [newJson setString:@"ZZCGMAN":self.ZZCGMAN];
	    [newJson setString:@"ZZCODAUTC":self.ZZCODAUTC];
	    [newJson setDecimal:@"ZZCIVAVIG":self.ZZCIVAVIG];
	    [newJson setDecimal:@"ZZSIVAVIG":self.ZZSIVAVIG];
	    [newJson setString:@"EDICION":self.EDICION];
	    [newJson setInt:@"TIRAJE_STD":self.TIRAJE_STD];
	    [newJson setString:@"AMBITO":self.AMBITO];
	    [newJson setString:@"ZZIDIOPU":self.ZZIDIOPU];
	    [newJson setString:@"ZZIDIOOR":self.ZZIDIOOR];
	    [newJson setString:@"ZZCATMOV":self.ZZCATMOV];
	    [newJson setDecimal:@"PRVRE":self.PRVRE];
	    [newJson setString:@"ZZTIPOTAPA":self.ZZTIPOTAPA];
	    [newJson setString:@"ZZTIPENC":self.ZZTIPENC];
	    [newJson setString:@"ZZFORMATO":self.ZZFORMATO];
	    [newJson setString:@"ZZPAGS":self.ZZPAGS];
	    [newJson setDecimal:@"LAENG":self.LAENG];
	    [newJson setDecimal:@"BREIT":self.BREIT];
	    [newJson setString:@"ZZARTCOL":self.ZZARTCOL];
	    [newJson setString:@"ZZARTBIB":self.ZZARTBIB];
	    [newJson setString:@"WAERS":self.WAERS];
	    [newJson setString:@"MEABM":self.MEABM];
	    [newJson setString:@"IHIVI":self.IHIVI];
	    [newJson setBoolean:@"disableSubmit":self.disableSubmit];
	}
    [newJson setString:@"?":@"Articulos"];
    [newJson autorelease];
    return newJson;
}
+ (SUPObjectList*)fromJSONList:(SUPJsonArray*)jsonArray
{
	if(jsonArray == nil)
		return nil;
	
	SUPObjectList* instanceList = [[SUPObjectList alloc] initWithCapacity:1];
	if(instanceList == nil)
		return nil;

	for (SUPJsonObject* jsonObject in jsonArray)
	{
	    RHM_Comercial_Articulos* inst = [[RHM_Comercial_Articulos alloc] initFromJson:jsonObject:0];
	    [instanceList add:inst];
	    [inst release];
	}
	return instanceList;
}

+ (SUPJsonArray*)toJSONList:(SUPObjectList*)instanceList
{
	SUPJsonArray* jsonArray = [[SUPJsonArray alloc] init];
	[jsonArray autorelease];
	for (RHM_Comercial_Articulos* inst in instanceList)
	{
		[jsonArray add:[inst json:0]];
	}
	return jsonArray;
}
- (void)dealloc
{
    if(_BUKRS)
    {
        [_BUKRS release];
        _BUKRS = nil;
    }
    if(_MATNR)
    {
        [_MATNR release];
        _MATNR = nil;
    }
    if(_BOLETIN)
    {
        [_BOLETIN release];
        _BOLETIN = nil;
    }
    if(_MAKTX)
    {
        [_MAKTX release];
        _MAKTX = nil;
    }
    if(_ZZTITMANUS)
    {
        [_ZZTITMANUS release];
        _ZZTITMANUS = nil;
    }
    if(_ZZTITULO)
    {
        [_ZZTITULO release];
        _ZZTITULO = nil;
    }
    if(_ZZSUBTIT)
    {
        [_ZZSUBTIT release];
        _ZZSUBTIT = nil;
    }
    if(_ZZDADVE)
    {
        [_ZZDADVE release];
        _ZZDADVE = nil;
    }
    if(_ZZSELLO)
    {
        [_ZZSELLO release];
        _ZZSELLO = nil;
    }
    if(_ZZLINEA)
    {
        [_ZZLINEA release];
        _ZZLINEA = nil;
    }
    if(_ZZCOLECCION)
    {
        [_ZZCOLECCION release];
        _ZZCOLECCION = nil;
    }
    if(_ZZCODNEG)
    {
        [_ZZCODNEG release];
        _ZZCODNEG = nil;
    }
    if(_ZZDACED)
    {
        [_ZZDACED release];
        _ZZDACED = nil;
    }
    if(_ZZNAJE)
    {
        [_ZZNAJE release];
        _ZZNAJE = nil;
    }
    if(_ZZDATGE)
    {
        [_ZZDATGE release];
        _ZZDATGE = nil;
    }
    if(_ZZFECHAV)
    {
        [_ZZFECHAV release];
        _ZZFECHAV = nil;
    }
    if(_ZZNOVEDAD)
    {
        [_ZZNOVEDAD release];
        _ZZNOVEDAD = nil;
    }
    if(_ZZCODTEM)
    {
        [_ZZCODTEM release];
        _ZZCODTEM = nil;
    }
    if(_MTART)
    {
        [_MTART release];
        _MTART = nil;
    }
    if(_EAN11)
    {
        [_EAN11 release];
        _EAN11 = nil;
    }
    if(_ZZARTCAT)
    {
        [_ZZARTCAT release];
        _ZZARTCAT = nil;
    }
    if(_ESTADO_RHM)
    {
        [_ESTADO_RHM release];
        _ESTADO_RHM = nil;
    }
    if(_FECHADISP)
    {
        [_FECHADISP release];
        _FECHADISP = nil;
    }
    if(_ZZCGMAN)
    {
        [_ZZCGMAN release];
        _ZZCGMAN = nil;
    }
    if(_ZZCODAUTC)
    {
        [_ZZCODAUTC release];
        _ZZCODAUTC = nil;
    }
    if(_ZZCIVAVIG)
    {
        [_ZZCIVAVIG release];
        _ZZCIVAVIG = nil;
    }
    if(_ZZSIVAVIG)
    {
        [_ZZSIVAVIG release];
        _ZZSIVAVIG = nil;
    }
    if(_EDICION)
    {
        [_EDICION release];
        _EDICION = nil;
    }
    if(_AMBITO)
    {
        [_AMBITO release];
        _AMBITO = nil;
    }
    if(_ZZIDIOPU)
    {
        [_ZZIDIOPU release];
        _ZZIDIOPU = nil;
    }
    if(_ZZIDIOOR)
    {
        [_ZZIDIOOR release];
        _ZZIDIOOR = nil;
    }
    if(_ZZCATMOV)
    {
        [_ZZCATMOV release];
        _ZZCATMOV = nil;
    }
    if(_PRVRE)
    {
        [_PRVRE release];
        _PRVRE = nil;
    }
    if(_ZZTIPOTAPA)
    {
        [_ZZTIPOTAPA release];
        _ZZTIPOTAPA = nil;
    }
    if(_ZZTIPENC)
    {
        [_ZZTIPENC release];
        _ZZTIPENC = nil;
    }
    if(_ZZFORMATO)
    {
        [_ZZFORMATO release];
        _ZZFORMATO = nil;
    }
    if(_ZZPAGS)
    {
        [_ZZPAGS release];
        _ZZPAGS = nil;
    }
    if(_LAENG)
    {
        [_LAENG release];
        _LAENG = nil;
    }
    if(_BREIT)
    {
        [_BREIT release];
        _BREIT = nil;
    }
    if(_ZZARTCOL)
    {
        [_ZZARTCOL release];
        _ZZARTCOL = nil;
    }
    if(_ZZARTBIB)
    {
        [_ZZARTBIB release];
        _ZZARTBIB = nil;
    }
    if(_WAERS)
    {
        [_WAERS release];
        _WAERS = nil;
    }
    if(_MEABM)
    {
        [_MEABM release];
        _MEABM = nil;
    }
    if(_IHIVI)
    {
        [_IHIVI release];
        _IHIVI = nil;
    }
	[super dealloc];
}

- (void)bind:(id<SUPResultSetWrapper>)resultSet
{
    @try
    {
        self.BUKRS = [resultSet getString:1:@"a"];
        self.MATNR = [resultSet getString:2:@"b"];
        self.BOLETIN = [resultSet getString:3:@"c"];
        self.MAKTX = [resultSet getString:4:@"d"];
        self.ZZTITMANUS = [resultSet getString:5:@"e"];
        self.ZZTITULO = [resultSet getString:6:@"f"];
        self.ZZSUBTIT = [resultSet getString:7:@"g"];
        self.ZZDADVE = [resultSet getString:8:@"h"];
        self.ZZSELLO = [resultSet getString:9:@"i"];
        self.ZZLINEA = [resultSet getString:10:@"j"];
        self.ZZCOLECCION = [resultSet getString:11:@"l"];
        self.ZZCODNEG = [resultSet getString:12:@"m"];
        self.ZZDACED = [resultSet getString:13:@"n"];
        self.ZZNAJE = [resultSet getString:14:@"o"];
        self.ZZDATGE = [resultSet getString:15:@"p"];
        self.ZZFECHAV = [resultSet getNullableDate:16:@"q"];
        self.ZZNOVEDAD = [resultSet getNullableDate:17:@"r"];
        self.ZZCODTEM = [resultSet getString:18:@"s"];
        self.MTART = [resultSet getString:19:@"t"];
        self.EAN11 = [resultSet getString:20:@"u"];
        self.ZZARTCAT = [resultSet getString:21:@"v"];
        self.ESTADO_RHM = [resultSet getString:22:@"w"];
        self.FECHADISP = [resultSet getString:23:@"x"];
        self.ZZCGMAN = [resultSet getString:24:@"y"];
        self.ZZCODAUTC = [resultSet getString:25:@"z"];
        self.ZZCIVAVIG = [resultSet getDecimal:26:@"ba"];
        self.ZZSIVAVIG = [resultSet getDecimal:27:@"bb"];
        self.EDICION = [resultSet getString:28:@"bc"];
        self.TIRAJE_STD = [resultSet getInt:29:@"bd"];
        self.AMBITO = [resultSet getString:30:@"be"];
        self.ZZIDIOPU = [resultSet getString:31:@"bf"];
        self.ZZIDIOOR = [resultSet getString:32:@"bg"];
        self.ZZCATMOV = [resultSet getString:33:@"bh"];
        self.PRVRE = [resultSet getDecimal:34:@"bi"];
        self.ZZTIPOTAPA = [resultSet getString:35:@"bj"];
        self.ZZTIPENC = [resultSet getString:36:@"bl"];
        self.ZZFORMATO = [resultSet getString:37:@"bm"];
        self.ZZPAGS = [resultSet getString:38:@"bn"];
        self.LAENG = [resultSet getDecimal:39:@"bo"];
        self.BREIT = [resultSet getDecimal:40:@"bp"];
        self.ZZARTCOL = [resultSet getString:41:@"bq"];
        self.ZZARTBIB = [resultSet getString:42:@"br"];
        self.WAERS = [resultSet getString:43:@"bs"];
        self.MEABM = [resultSet getString:44:@"bt"];
        self.IHIVI = [resultSet getString:45:@"bu"];
        self->_pending = [resultSet getBoolean:46:@"_pf"];
        self->_pendingChange = [resultSet getChar:47:@"_pc"];
        self->_replayPending = [resultSet getLong:48:@"_rp"];
        self->_replayFailure = [resultSet getLong:49:@"_rf"];
        self.surrogateKey = [resultSet getLong:50:@"bv"];
        self->_replayCounter = [resultSet getLong:51:@"_rc"];
        self.disableSubmit = [resultSet getBoolean:52:@"_ds"];
                        [self setOriginalState:nil];
        self->_originalStateValid = NO;
                                                self->_isNew = NO;
        self->_isDirty = NO;
        self->_isDeleted = NO;
    }
    @catch (SUPPersistenceException *spe)
    {
        MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"bind",[spe message]);
    }
}

- (void)bindWithQuery:(id<SUPResultSetWrapper>)resultSet:(SUPQuery*)query
{

    SUPDatabaseMetaData *database = [RHM_Comercial_RHM_ComercialDB metaData];
    SUPEntityMetaData *entity = [RHM_Comercial_Articulos metaData];
    SUPObjectList* cl = [SUPObjectList listWithCapacity:10];
    
    if(query.selectItems != nil)
    {
    	for (SUPSelectItem* si in query.selectItems)
    	{
        	SUPEntityMetaData* itemEntity = [SUPStatementBuilder findEntity:database:query:si.alias];
        	SUPAttributeMetaData* amd = [itemEntity getAttribute:si.attribute];
        	[cl add:amd];
    	}
    } else 
    {
        for (SUPAttributeMetaData* amd in entity.attributes)
        {
            if ([amd isPersistent])
            {
                [cl add:amd];
            }
        }
    }
    self->_isNew = NO;
    self->_isDirty = NO;
    
    for(int j=0;j<[cl size];j++)
    {
        SUPAttributeMetaData *amd = (SUPAttributeMetaData *)[cl item:j];
		if([amd.name isEqualToString:@"BUKRS"])
        	self.BUKRS = [resultSet getString:j+1:@"a"];
		if([amd.name isEqualToString:@"MATNR"])
        	self.MATNR = [resultSet getString:j+1:@"b"];
		if([amd.name isEqualToString:@"BOLETIN"])
        	self.BOLETIN = [resultSet getString:j+1:@"c"];
		if([amd.name isEqualToString:@"MAKTX"])
        	self.MAKTX = [resultSet getString:j+1:@"d"];
		if([amd.name isEqualToString:@"ZZTITMANUS"])
        	self.ZZTITMANUS = [resultSet getString:j+1:@"e"];
		if([amd.name isEqualToString:@"ZZTITULO"])
        	self.ZZTITULO = [resultSet getString:j+1:@"f"];
		if([amd.name isEqualToString:@"ZZSUBTIT"])
        	self.ZZSUBTIT = [resultSet getString:j+1:@"g"];
		if([amd.name isEqualToString:@"ZZDADVE"])
        	self.ZZDADVE = [resultSet getString:j+1:@"h"];
		if([amd.name isEqualToString:@"ZZSELLO"])
        	self.ZZSELLO = [resultSet getString:j+1:@"i"];
		if([amd.name isEqualToString:@"ZZLINEA"])
        	self.ZZLINEA = [resultSet getString:j+1:@"j"];
		if([amd.name isEqualToString:@"ZZCOLECCION"])
        	self.ZZCOLECCION = [resultSet getString:j+1:@"l"];
		if([amd.name isEqualToString:@"ZZCODNEG"])
        	self.ZZCODNEG = [resultSet getString:j+1:@"m"];
		if([amd.name isEqualToString:@"ZZDACED"])
        	self.ZZDACED = [resultSet getString:j+1:@"n"];
		if([amd.name isEqualToString:@"ZZNAJE"])
        	self.ZZNAJE = [resultSet getString:j+1:@"o"];
		if([amd.name isEqualToString:@"ZZDATGE"])
        	self.ZZDATGE = [resultSet getString:j+1:@"p"];
		if([amd.name isEqualToString:@"ZZFECHAV"])
        	self.ZZFECHAV = [resultSet getNullableDate:j+1:@"q"];
		if([amd.name isEqualToString:@"ZZNOVEDAD"])
        	self.ZZNOVEDAD = [resultSet getNullableDate:j+1:@"r"];
		if([amd.name isEqualToString:@"ZZCODTEM"])
        	self.ZZCODTEM = [resultSet getString:j+1:@"s"];
		if([amd.name isEqualToString:@"MTART"])
        	self.MTART = [resultSet getString:j+1:@"t"];
		if([amd.name isEqualToString:@"EAN11"])
        	self.EAN11 = [resultSet getString:j+1:@"u"];
		if([amd.name isEqualToString:@"ZZARTCAT"])
        	self.ZZARTCAT = [resultSet getString:j+1:@"v"];
		if([amd.name isEqualToString:@"ESTADO_RHM"])
        	self.ESTADO_RHM = [resultSet getString:j+1:@"w"];
		if([amd.name isEqualToString:@"FECHADISP"])
        	self.FECHADISP = [resultSet getString:j+1:@"x"];
		if([amd.name isEqualToString:@"ZZCGMAN"])
        	self.ZZCGMAN = [resultSet getString:j+1:@"y"];
		if([amd.name isEqualToString:@"ZZCODAUTC"])
        	self.ZZCODAUTC = [resultSet getString:j+1:@"z"];
		if([amd.name isEqualToString:@"ZZCIVAVIG"])
        	self.ZZCIVAVIG = [resultSet getDecimal:j+1:@"ba"];
		if([amd.name isEqualToString:@"ZZSIVAVIG"])
        	self.ZZSIVAVIG = [resultSet getDecimal:j+1:@"bb"];
		if([amd.name isEqualToString:@"EDICION"])
        	self.EDICION = [resultSet getString:j+1:@"bc"];
		if([amd.name isEqualToString:@"TIRAJE_STD"])
        	self.TIRAJE_STD = [resultSet getInt:j+1:@"bd"];
		if([amd.name isEqualToString:@"AMBITO"])
        	self.AMBITO = [resultSet getString:j+1:@"be"];
		if([amd.name isEqualToString:@"ZZIDIOPU"])
        	self.ZZIDIOPU = [resultSet getString:j+1:@"bf"];
		if([amd.name isEqualToString:@"ZZIDIOOR"])
        	self.ZZIDIOOR = [resultSet getString:j+1:@"bg"];
		if([amd.name isEqualToString:@"ZZCATMOV"])
        	self.ZZCATMOV = [resultSet getString:j+1:@"bh"];
		if([amd.name isEqualToString:@"PRVRE"])
        	self.PRVRE = [resultSet getDecimal:j+1:@"bi"];
		if([amd.name isEqualToString:@"ZZTIPOTAPA"])
        	self.ZZTIPOTAPA = [resultSet getString:j+1:@"bj"];
		if([amd.name isEqualToString:@"ZZTIPENC"])
        	self.ZZTIPENC = [resultSet getString:j+1:@"bl"];
		if([amd.name isEqualToString:@"ZZFORMATO"])
        	self.ZZFORMATO = [resultSet getString:j+1:@"bm"];
		if([amd.name isEqualToString:@"ZZPAGS"])
        	self.ZZPAGS = [resultSet getString:j+1:@"bn"];
		if([amd.name isEqualToString:@"LAENG"])
        	self.LAENG = [resultSet getDecimal:j+1:@"bo"];
		if([amd.name isEqualToString:@"BREIT"])
        	self.BREIT = [resultSet getDecimal:j+1:@"bp"];
		if([amd.name isEqualToString:@"ZZARTCOL"])
        	self.ZZARTCOL = [resultSet getString:j+1:@"bq"];
		if([amd.name isEqualToString:@"ZZARTBIB"])
        	self.ZZARTBIB = [resultSet getString:j+1:@"br"];
		if([amd.name isEqualToString:@"WAERS"])
        	self.WAERS = [resultSet getString:j+1:@"bs"];
		if([amd.name isEqualToString:@"MEABM"])
        	self.MEABM = [resultSet getString:j+1:@"bt"];
		if([amd.name isEqualToString:@"IHIVI"])
        	self.IHIVI = [resultSet getString:j+1:@"bu"];
		if([amd.name isEqualToString:@"pending"])
        	self->_pending = [resultSet getBoolean:j+1:@"_pf"];
		if([amd.name isEqualToString:@"pendingChange"])
        	self->_pendingChange = [resultSet getChar:j+1:@"_pc"];
		if([amd.name isEqualToString:@"replayPending"])
        	self->_replayPending = [resultSet getLong:j+1:@"_rp"];
		if([amd.name isEqualToString:@"replayFailure"])
        	self->_replayFailure = [resultSet getLong:j+1:@"_rf"];
		if([amd.name isEqualToString:@"surrogateKey"])
        	self.surrogateKey = [resultSet getLong:j+1:@"bv"];
		if([amd.name isEqualToString:@"replayCounter"])
        	self->_replayCounter = [resultSet getLong:j+1:@"_rc"];
		if([amd.name isEqualToString:@"disableSubmit"])
        	self.disableSubmit = [resultSet getBoolean:j+1:@"_ds"];
    }
    self->_isNew = NO;
    self->_isDirty = NO;
    self->_isDeleted = NO;
}

- (void)clearRelationshipObjects
{
}

- (void)copyAll:(RHM_Comercial_Articulos*)other
{
	[self copyAll:other withParent:(SUPAbstractEntity*)other];
}


- (void)copyAll:(RHM_Comercial_Articulos*)other withParent:(SUPAbstractEntity*)parent
{
    [self setBUKRS:other.BUKRS];
    
    [self setMATNR:other.MATNR];
    
    [self setBOLETIN:other.BOLETIN];
    
    [self setMAKTX:other.MAKTX];
    
    [self setZZTITMANUS:other.ZZTITMANUS];
    
    [self setZZTITULO:other.ZZTITULO];
    
    [self setZZSUBTIT:other.ZZSUBTIT];
    
    [self setZZDADVE:other.ZZDADVE];
    
    [self setZZSELLO:other.ZZSELLO];
    
    [self setZZLINEA:other.ZZLINEA];
    
    [self setZZCOLECCION:other.ZZCOLECCION];
    
    [self setZZCODNEG:other.ZZCODNEG];
    
    [self setZZDACED:other.ZZDACED];
    
    [self setZZNAJE:other.ZZNAJE];
    
    [self setZZDATGE:other.ZZDATGE];
    
    [self setZZFECHAV:other.ZZFECHAV];
    
    [self setZZNOVEDAD:other.ZZNOVEDAD];
    
    [self setZZCODTEM:other.ZZCODTEM];
    
    [self setMTART:other.MTART];
    
    [self setEAN11:other.EAN11];
    
    [self setZZARTCAT:other.ZZARTCAT];
    
    [self setESTADO_RHM:other.ESTADO_RHM];
    
    [self setFECHADISP:other.FECHADISP];
    
    [self setZZCGMAN:other.ZZCGMAN];
    
    [self setZZCODAUTC:other.ZZCODAUTC];
    
    [self setZZCIVAVIG:other.ZZCIVAVIG];
    
    [self setZZSIVAVIG:other.ZZSIVAVIG];
    
    [self setEDICION:other.EDICION];
    
    [self setTIRAJE_STD:other.TIRAJE_STD];
    
    [self setAMBITO:other.AMBITO];
    
    [self setZZIDIOPU:other.ZZIDIOPU];
    
    [self setZZIDIOOR:other.ZZIDIOOR];
    
    [self setZZCATMOV:other.ZZCATMOV];
    
    [self setPRVRE:other.PRVRE];
    
    [self setZZTIPOTAPA:other.ZZTIPOTAPA];
    
    [self setZZTIPENC:other.ZZTIPENC];
    
    [self setZZFORMATO:other.ZZFORMATO];
    
    [self setZZPAGS:other.ZZPAGS];
    
    [self setLAENG:other.LAENG];
    
    [self setBREIT:other.BREIT];
    
    [self setZZARTCOL:other.ZZARTCOL];
    
    [self setZZARTBIB:other.ZZARTBIB];
    
    [self setWAERS:other.WAERS];
    
    [self setMEABM:other.MEABM];
    
    [self setIHIVI:other.IHIVI];
    
    self->_pending = other->_pending;
    
    self->_pendingChange = other->_pendingChange;
    
    self->_replayPending = other->_replayPending;
    
    self->_replayFailure = other->_replayFailure;
    
    [self setSurrogateKey:other.surrogateKey];
    
    self->_replayCounter = other->_replayCounter;
    
    [self setDisableSubmit:other.disableSubmit];
    
	self->_isNew = other->_isNew;

}

+ (int32_t)countWithQuery:(SUPQuery*)query
{
    id<SUPConnectionWrapper> connection = nil;
id<SUPStatementWrapper> statement = nil;
id<SUPResultSetWrapper> resultSet = nil;
    {
        @try
        {    
            [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
            connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
            int32_t count = 0;

            statement = [SUPStatementBuilder prepareQuery:connection:[RHM_Comercial_RHM_ComercialDB metaData]:[RHM_Comercial_Articulos metaData]:query];
            resultSet = [statement executeQuery];
            while ([resultSet next])
            {
                count++;   
            }
			return count;
        }
        @catch (NSException *e)
        {
                    MBOLogPersistenceException(SUPCLIENTRT_PERSISTENCEEXCEPTIONMSG, @"countWithQuery",[NSString stringWithFormat:@"%@: %@",[e name],[e reason]]);
        }
        @finally
        {
            if(resultSet) [resultSet close];
            if(statement) [statement close];
            [connection releaseToPool];
            [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
        }
    }
	return 0;
}

- (void)cancelPending
{

	[self cancelPending_OnlyReplayPending:NO:self];
}

- (void)cancelReplayPending:(SUPAbstractEntity*)entity
{

	[self cancelPending_OnlyReplayPending:YES:entity];
}

- (void)cancelPending_OnlyReplayPending:(BOOL)onlyReplayPending:(SUPAbstractEntity*)entity
{
    id<SUPConnectionWrapper> connection = nil;
    @try
    {
        [[RHM_Comercial_RHM_ComercialDB dblock] writeLock];
        connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
        SUPLocalTransaction* transaction = ([connection inTransaction] ? nil : [RHM_Comercial_RHM_ComercialDB beginTransaction]);
		@try {
    		if (self.pending && (!onlyReplayPending || (self.replayCounter <= entity.replayCounter)))
    		{
        		//BOOL isDeleted = self.isDeleted;
				[self deletePending:YES];
     		}
        	if (transaction != nil)
        	{
            	[transaction commit];
        	}
    	}
    	@catch (NSException* e)
    	{
        	if (transaction != nil)
        	{
            	[transaction rollback];
        	}
        	@throw e;
    	}
    }
    @catch (SUPPersistenceException *spe)
    {
        MBOLogPersistenceException(SUPCLIENTRT_PERSISTENCEEXCEPTIONMSG,@"cancelPending",[spe message]);
    }
    @finally
    {
        [connection releaseToPool];
        [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
    } 
}

- (void)create
{
    @throw [SUPNoSuchOperationException getInstance];
}

- (void)delete
{
    @throw [SUPNoSuchOperationException getInstance];
}

- (RHM_Comercial_RHM_ComercialDB*)database
{
   return [RHM_Comercial_RHM_ComercialDB instance];
}

+ (RHM_Comercial_Articulos*)find_by_id_string:(NSString*)id_string
{
    if(id_string == nil) return nil;
	int64_t key;
	NSNumberFormatter *nf = [[[NSNumberFormatter alloc] init] autorelease];
	key = [[nf numberFromString:id_string] longValue];
    return [RHM_Comercial_Articulos find:key];
	
}

+ (RHM_Comercial_Articulos*)find:(int64_t)id
{
	return [self find:id inTable:MainEntityTable];
}

+ (RHM_Comercial_Articulos*)find:(int64_t)id_ inTable:(SUPEntityTable)table
{
    RHM_Comercial_Articulos* result = nil;
	RHM_Comercial_Articulos* downloadState = nil;
    id<SUPStatementWrapper> preparedStatement = nil;
    id<SUPConnectionWrapper> connection = nil;
    @try
    {
        [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
    
    	connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
    	//@synchronized(connection)
    	{
        	@try
        	{
            	if (table == MainEntityTable)
            	{
                	preparedStatement = [connection prepareStatement:@"select \"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"ba\",\"bb\",\"bc\",\"bd\",\"be\",\"bf\",\"bg\",\"bh\",\"bi\",\"bj\",\"bl\",\"bm\",\"bn\",\"bo\",\"bp\",\"bq\",\"br\",\"bs\",\"bt\",\"bu\",\"_pf\",\"_pc\",\"_rp\",\"_rf\",\"bv\",\"_rc\",\"_ds\" from rhm_comercial_1_0"
                	                                                       "_articulos where \"bv\"=? order by \"_pf\""];
            	}
            	else
            	{
                	preparedStatement = [connection prepareStatement:@"select \"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"ba\",\"bb\",\"bc\",\"bd\",\"be\",\"bf\",\"bg\",\"bh\",\"bi\",\"bj\",\"bl\",\"bm\",\"bn\",\"bo\",\"bp\",\"bq\",\"br\",\"bs\",\"bt\",\"bu\",\"_pf\",\"_pc\",\"_rp\",\"_rf\",\"bv\",\"_rc\",\"_ds\" from rhm_comercial_1_0"
                	                                                       "_articulos_os where \"bv\"=? order by \"_pf\""];
            	}
            	[preparedStatement setLong:1:@"surrogateKey":id_];
            	id<SUPResultSetWrapper> resultSet = [preparedStatement executeQuery];
            	while ([resultSet next])
            	{
            		if(result) [result release];
                	result = [[RHM_Comercial_Articulos alloc] init];
                	[result bind:resultSet];
                	if (table == OriginalStateEntityTable)
                	{
                    	result->_pending = false;
                    	result->_pendingChange = NotPending;
                	}
                	if (result.pending)
                	{
                    	break;
                	}
                	else
                	{
 	              		downloadState = [RHM_Comercial_Articulos getInstance];
                		[downloadState copyAll:result];
                	}
            	}
            	[resultSet close];      
        	}
        	@catch (SUPPersistenceException *spe)
        	{
            	@throw spe;
        	}
    	}
    }
    @catch (SUPPersistenceException *spe)
    {
        MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"find",[spe message]);
    }
    @finally
    {
    	if(preparedStatement) [preparedStatement close];
        [connection releaseToPool];
        [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
    }
    if(result)
    {
    	if(result.pending)
    		result.downloadState = (SUPAbstractEntity*)downloadState;
  		//if(result != downloadState)
  		//	[downloadState release];
    }
    [result autorelease];
    return result;
}

+ (id<SUPSynchronizationGroup>)getSynchronizationGroup
{
	return [RHM_Comercial_RHM_ComercialDB getSyncGroupForName:@"default"];
}

+ (SUPObjectList*)findWithQuery:(SUPQuery*)query
{
    id<SUPConnectionWrapper> connection = nil;
	if(query.selectItems != nil)
	{
		if(query.entityAlias == nil)
		{
			SUPEntityAlias *ea = [SUPEntityAlias getInstance];
			ea.alias = [[query.selectItems item:0] alias];
			ea.entity = @"Articulos";
			query.entityAlias = ea;
		}
		BOOL surrogateKeyFound = NO;
		for(SUPSelectItem *si in query.selectItems)
		{
			if([si.attribute compare:@"surrogateKey"] == 0)
				surrogateKeyFound = YES;
		}
		if(!surrogateKeyFound)
		{
			SUPSelectItem *si = [SUPSelectItem getInstance];
			si.attribute = @"surrogateKey";
			si.alias = [query.entityAlias alias];
			[query.selectItems add:si];
		}
	}
id<SUPStatementWrapper> statement = nil;
id<SUPResultSetWrapper> resultSet = nil;
    {
        @try
        {    
            [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
            connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
            int32_t count = 0;
            RHM_Comercial_ArticulosList* list = [[RHM_Comercial_ArticulosList alloc] init];

            statement = [SUPStatementBuilder prepareQuery:connection:[RHM_Comercial_RHM_ComercialDB metaData]:[RHM_Comercial_Articulos metaData]:query];
            resultSet = [statement executeQuery];
            while ([resultSet next])
            {
                count++;   
                RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
                [entity bindWithQuery:resultSet:query];
                [list add:entity];
                [entity release];
            }
            [list autorelease];
            return list;
        }
        @catch (NSException *e)
        {
                    MBOLogPersistenceException(SUPCLIENTRT_PERSISTENCEEXCEPTIONMSG, @"findWithQuery",[NSString stringWithFormat:@"%@: %@",[e name],[e reason]]);
        }
        @finally
        {
            if(resultSet) [resultSet close];
            if(statement) [statement close];
            [connection releaseToPool];
            [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
        }
    }
    return nil;
}


- (id<SUPStatementWrapper>)getCreateStatement:(id<SUPConnectionWrapper>)connection forTable:(SUPEntityTable)table;
{
    id<SUPStatementWrapper> preparedStatement;
    if (table == MainEntityTable)
    {
        preparedStatement = [connection prepareStatement:@"insert into rhm_comercial_1_0_articulos (\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"ba\",\"bb\",\"bc\",\"bd\",\"be\",\"bf\",\"bg\",\"bh\",\"bi\",\"bj\",\"bl\",\"bm\",\"bn\",\"bo\",\"bp\",\"bq\",\"br\",\"bs\",\"bt\",\"bu\",\"_pf\",\"_pc\",\"_rp\",\"_rf\",\"bv\","
                                                               "\"_rc\",\"_ds\") values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"];
    }
    else
    {
        preparedStatement = [connection prepareStatement:@"insert into rhm_comercial_1_0_articulos_os (\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"ba\",\"bb\",\"bc\",\"bd\",\"be\",\"bf\",\"bg\",\"bh\",\"bi\",\"bj\",\"bl\",\"bm\",\"bn\",\"bo\",\"bp\",\"bq\",\"br\",\"bs\",\"bt\",\"bu\",\"_pf\",\"_pc\",\"_rp\",\"_rf\",\"b"
                                                               "v\",\"_rc\",\"_ds\") values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"];
    }
    // Add updated values
	if(self.BUKRS == nil)
		self.BUKRS = @"";
		//RHM_Comercial_Articulos getCreateStatement:BUKRS not allowed to be null
    [preparedStatement setString:1:@"a":self.BUKRS];
	if(self.MATNR == nil)
		self.MATNR = @"";
		//RHM_Comercial_Articulos getCreateStatement:MATNR not allowed to be null
    [preparedStatement setString:2:@"b":self.MATNR];
	if(self.BOLETIN == nil)
		self.BOLETIN = @"";
		//RHM_Comercial_Articulos getCreateStatement:BOLETIN not allowed to be null
    [preparedStatement setString:3:@"c":self.BOLETIN];
	if(self.MAKTX == nil)
		self.MAKTX = @"";
		//RHM_Comercial_Articulos getCreateStatement:MAKTX not allowed to be null
    [preparedStatement setString:4:@"d":self.MAKTX];
	if(self.ZZTITMANUS == nil)
		self.ZZTITMANUS = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZTITMANUS not allowed to be null
    [preparedStatement setString:5:@"e":self.ZZTITMANUS];
	if(self.ZZTITULO == nil)
		self.ZZTITULO = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZTITULO not allowed to be null
    [preparedStatement setString:6:@"f":self.ZZTITULO];
	if(self.ZZSUBTIT == nil)
		self.ZZSUBTIT = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZSUBTIT not allowed to be null
    [preparedStatement setString:7:@"g":self.ZZSUBTIT];
	if(self.ZZDADVE == nil)
		self.ZZDADVE = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZDADVE not allowed to be null
    [preparedStatement setString:8:@"h":self.ZZDADVE];
	if(self.ZZSELLO == nil)
		self.ZZSELLO = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZSELLO not allowed to be null
    [preparedStatement setString:9:@"i":self.ZZSELLO];
	if(self.ZZLINEA == nil)
		self.ZZLINEA = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZLINEA not allowed to be null
    [preparedStatement setString:10:@"j":self.ZZLINEA];
	if(self.ZZCOLECCION == nil)
		self.ZZCOLECCION = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZCOLECCION not allowed to be null
    [preparedStatement setString:11:@"l":self.ZZCOLECCION];
	if(self.ZZCODNEG == nil)
		self.ZZCODNEG = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZCODNEG not allowed to be null
    [preparedStatement setString:12:@"m":self.ZZCODNEG];
	if(self.ZZDACED == nil)
		self.ZZDACED = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZDACED not allowed to be null
    [preparedStatement setString:13:@"n":self.ZZDACED];
	if(self.ZZNAJE == nil)
		self.ZZNAJE = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZNAJE not allowed to be null
    [preparedStatement setString:14:@"o":self.ZZNAJE];
	if(self.ZZDATGE == nil)
		self.ZZDATGE = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZDATGE not allowed to be null
    [preparedStatement setString:15:@"p":self.ZZDATGE];
    [preparedStatement setNullableDate:16:@"q":self.ZZFECHAV];
    [preparedStatement setNullableDate:17:@"r":self.ZZNOVEDAD];
	if(self.ZZCODTEM == nil)
		self.ZZCODTEM = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZCODTEM not allowed to be null
    [preparedStatement setString:18:@"s":self.ZZCODTEM];
	if(self.MTART == nil)
		self.MTART = @"";
		//RHM_Comercial_Articulos getCreateStatement:MTART not allowed to be null
    [preparedStatement setString:19:@"t":self.MTART];
	if(self.EAN11 == nil)
		self.EAN11 = @"";
		//RHM_Comercial_Articulos getCreateStatement:EAN11 not allowed to be null
    [preparedStatement setString:20:@"u":self.EAN11];
	if(self.ZZARTCAT == nil)
		self.ZZARTCAT = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZARTCAT not allowed to be null
    [preparedStatement setString:21:@"v":self.ZZARTCAT];
	if(self.ESTADO_RHM == nil)
		self.ESTADO_RHM = @"";
		//RHM_Comercial_Articulos getCreateStatement:ESTADO_RHM not allowed to be null
    [preparedStatement setString:22:@"w":self.ESTADO_RHM];
	if(self.FECHADISP == nil)
		self.FECHADISP = @"";
		//RHM_Comercial_Articulos getCreateStatement:FECHADISP not allowed to be null
    [preparedStatement setString:23:@"x":self.FECHADISP];
	if(self.ZZCGMAN == nil)
		self.ZZCGMAN = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZCGMAN not allowed to be null
    [preparedStatement setString:24:@"y":self.ZZCGMAN];
	if(self.ZZCODAUTC == nil)
		self.ZZCODAUTC = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZCODAUTC not allowed to be null
    [preparedStatement setString:25:@"z":self.ZZCODAUTC];
	if(self.ZZCIVAVIG == nil)
		self.ZZCIVAVIG = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getCreateStatement:ZZCIVAVIG not allowed to be null
    [preparedStatement setDecimal:26:@"ba":self.ZZCIVAVIG];
	if(self.ZZSIVAVIG == nil)
		self.ZZSIVAVIG = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getCreateStatement:ZZSIVAVIG not allowed to be null
    [preparedStatement setDecimal:27:@"bb":self.ZZSIVAVIG];
	if(self.EDICION == nil)
		self.EDICION = @"";
		//RHM_Comercial_Articulos getCreateStatement:EDICION not allowed to be null
    [preparedStatement setString:28:@"bc":self.EDICION];
    [preparedStatement setInt:29:@"bd":self.TIRAJE_STD];
	if(self.AMBITO == nil)
		self.AMBITO = @"";
		//RHM_Comercial_Articulos getCreateStatement:AMBITO not allowed to be null
    [preparedStatement setString:30:@"be":self.AMBITO];
	if(self.ZZIDIOPU == nil)
		self.ZZIDIOPU = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZIDIOPU not allowed to be null
    [preparedStatement setString:31:@"bf":self.ZZIDIOPU];
	if(self.ZZIDIOOR == nil)
		self.ZZIDIOOR = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZIDIOOR not allowed to be null
    [preparedStatement setString:32:@"bg":self.ZZIDIOOR];
	if(self.ZZCATMOV == nil)
		self.ZZCATMOV = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZCATMOV not allowed to be null
    [preparedStatement setString:33:@"bh":self.ZZCATMOV];
	if(self.PRVRE == nil)
		self.PRVRE = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getCreateStatement:PRVRE not allowed to be null
    [preparedStatement setDecimal:34:@"bi":self.PRVRE];
	if(self.ZZTIPOTAPA == nil)
		self.ZZTIPOTAPA = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZTIPOTAPA not allowed to be null
    [preparedStatement setString:35:@"bj":self.ZZTIPOTAPA];
	if(self.ZZTIPENC == nil)
		self.ZZTIPENC = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZTIPENC not allowed to be null
    [preparedStatement setString:36:@"bl":self.ZZTIPENC];
	if(self.ZZFORMATO == nil)
		self.ZZFORMATO = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZFORMATO not allowed to be null
    [preparedStatement setString:37:@"bm":self.ZZFORMATO];
	if(self.ZZPAGS == nil)
		self.ZZPAGS = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZPAGS not allowed to be null
    [preparedStatement setString:38:@"bn":self.ZZPAGS];
	if(self.LAENG == nil)
		self.LAENG = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getCreateStatement:LAENG not allowed to be null
    [preparedStatement setDecimal:39:@"bo":self.LAENG];
	if(self.BREIT == nil)
		self.BREIT = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getCreateStatement:BREIT not allowed to be null
    [preparedStatement setDecimal:40:@"bp":self.BREIT];
	if(self.ZZARTCOL == nil)
		self.ZZARTCOL = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZARTCOL not allowed to be null
    [preparedStatement setString:41:@"bq":self.ZZARTCOL];
	if(self.ZZARTBIB == nil)
		self.ZZARTBIB = @"";
		//RHM_Comercial_Articulos getCreateStatement:ZZARTBIB not allowed to be null
    [preparedStatement setString:42:@"br":self.ZZARTBIB];
	if(self.WAERS == nil)
		self.WAERS = @"";
		//RHM_Comercial_Articulos getCreateStatement:WAERS not allowed to be null
    [preparedStatement setString:43:@"bs":self.WAERS];
	if(self.MEABM == nil)
		self.MEABM = @"";
		//RHM_Comercial_Articulos getCreateStatement:MEABM not allowed to be null
    [preparedStatement setString:44:@"bt":self.MEABM];
	if(self.IHIVI == nil)
		self.IHIVI = @"";
		//RHM_Comercial_Articulos getCreateStatement:IHIVI not allowed to be null
    [preparedStatement setString:45:@"bu":self.IHIVI];
    [preparedStatement setBoolean:46:@"_pf":((table == MainEntityTable) ? self->_pending : NO)];    		
    [preparedStatement setChar:47:@"_pc":((table == MainEntityTable) ? self->_pendingChange : 'N')];    		
    [preparedStatement setLong:48:@"_rp":((table == MainEntityTable) ? self->_replayPending : 0)];    		
    [preparedStatement setLong:49:@"_rf":((table == MainEntityTable) ? self->_replayFailure : 0)];    		
    [preparedStatement setLong:50:@"bv":self.surrogateKey];
    [preparedStatement setLong:51:@"_rc":((table == MainEntityTable) ? self.replayCounter : 0)];
    [preparedStatement setBoolean:52:@"_ds":self.disableSubmit];
	return preparedStatement;
}

- (id<SUPStatementWrapper>)getDeleteStatement:(id<SUPConnectionWrapper>)connection forTable:(SUPEntityTable)table;
{
    id<SUPStatementWrapper> preparedStatement;
    if (table == MainEntityTable)
    {
        preparedStatement = [connection prepareStatement:@"delete from rhm_comercial_1_0_articulos where \"_pf\"=? and \"bv\"=?"];
    }
    else
    {
        preparedStatement = [connection prepareStatement:@"delete from rhm_comercial_1_0_articulos_os where \"_pf\"=? and \"bv\"=?"];
    }
    // Fill in values for "where" clause
    [preparedStatement setBoolean:1:@"_pf":self->_pending];    		
    [preparedStatement setLong:2:@"bv":self.surrogateKey];
	return preparedStatement;
}

- (id<SUPStatementWrapper>)getUpdateStatement:(id<SUPConnectionWrapper>)connection forTable:(SUPEntityTable)table;
{
    id<SUPStatementWrapper> preparedStatement;
    if (table == MainEntityTable)
    {
    	preparedStatement = [connection prepareStatement:@"update rhm_comercial_1_0_articulos set \"a\"=?,\"b\"=?,\"c\"=?,\"d\"=?,\"e\"=?,\"f\"=?,\"g\"=?,\"h\"=?,\"i\"=?,\"j\"=?,\"l\"=?,\"m\"=?,\"n\"=?,\"o\"=?,\"p\"=?,\"q\"=?,\"r\"=?,\"s\"=?,\"t\"=?,\"u\"=?,\"v\"=?,\"w\"=?,\"x\"=?,\"y\"=?,\"z\"=?,\"ba\"=?,\"bb\"=?,\"bc\"=?,\"bd\"=?,\"be\"=?,\"bf\"=?,\"bg\"=?,\"bh\"=?,\"bi\"=?,\"bj\"=?,\"bl\"=?,\"bm\""
    	                                                       "=?,\"bn\"=?,\"bo\"=?,\"bp\"=?,\"bq\"=?,\"br\"=?,\"bs\"=?,\"bt\"=?,\"bu\"=?,\"_pc\"=?,\"_rp\"=?,\"_rf\"=?,\"_rc\"=?,\"_ds\"=? where \"_pf\"=? and \"bv\"=?"];
    }
    else
    {
        preparedStatement = [connection prepareStatement:@"update rhm_comercial_1_0_articulos_os set \"a\"=?,\"b\"=?,\"c\"=?,\"d\"=?,\"e\"=?,\"f\"=?,\"g\"=?,\"h\"=?,\"i\"=?,\"j\"=?,\"l\"=?,\"m\"=?,\"n\"=?,\"o\"=?,\"p\"=?,\"q\"=?,\"r\"=?,\"s\"=?,\"t\"=?,\"u\"=?,\"v\"=?,\"w\"=?,\"x\"=?,\"y\"=?,\"z\"=?,\"ba\"=?,\"bb\"=?,\"bc\"=?,\"bd\"=?,\"be\"=?,\"bf\"=?,\"bg\"=?,\"bh\"=?,\"bi\"=?,\"bj\"=?,\"bl\"=?,\""
                                                               "bm\"=?,\"bn\"=?,\"bo\"=?,\"bp\"=?,\"bq\"=?,\"br\"=?,\"bs\"=?,\"bt\"=?,\"bu\"=?,\"_pc\"=?,\"_rp\"=?,\"_rf\"=?,\"_rc\"=?,\"_ds\"=? where \"_pf\"=? and \"bv\"=?"];
    }
    // Add updated values
    int parameterIndex = 0;
	if(self.BUKRS == nil)
		self.BUKRS = @"";
		//RHM_Comercial_Articulos getUpdateStatement:BUKRS not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"a":self.BUKRS];
	if(self.MATNR == nil)
		self.MATNR = @"";
		//RHM_Comercial_Articulos getUpdateStatement:MATNR not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"b":self.MATNR];
	if(self.BOLETIN == nil)
		self.BOLETIN = @"";
		//RHM_Comercial_Articulos getUpdateStatement:BOLETIN not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"c":self.BOLETIN];
	if(self.MAKTX == nil)
		self.MAKTX = @"";
		//RHM_Comercial_Articulos getUpdateStatement:MAKTX not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"d":self.MAKTX];
	if(self.ZZTITMANUS == nil)
		self.ZZTITMANUS = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZTITMANUS not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"e":self.ZZTITMANUS];
	if(self.ZZTITULO == nil)
		self.ZZTITULO = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZTITULO not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"f":self.ZZTITULO];
	if(self.ZZSUBTIT == nil)
		self.ZZSUBTIT = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZSUBTIT not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"g":self.ZZSUBTIT];
	if(self.ZZDADVE == nil)
		self.ZZDADVE = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZDADVE not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"h":self.ZZDADVE];
	if(self.ZZSELLO == nil)
		self.ZZSELLO = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZSELLO not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"i":self.ZZSELLO];
	if(self.ZZLINEA == nil)
		self.ZZLINEA = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZLINEA not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"j":self.ZZLINEA];
	if(self.ZZCOLECCION == nil)
		self.ZZCOLECCION = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZCOLECCION not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"l":self.ZZCOLECCION];
	if(self.ZZCODNEG == nil)
		self.ZZCODNEG = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZCODNEG not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"m":self.ZZCODNEG];
	if(self.ZZDACED == nil)
		self.ZZDACED = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZDACED not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"n":self.ZZDACED];
	if(self.ZZNAJE == nil)
		self.ZZNAJE = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZNAJE not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"o":self.ZZNAJE];
	if(self.ZZDATGE == nil)
		self.ZZDATGE = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZDATGE not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"p":self.ZZDATGE];
    parameterIndex++;
    [preparedStatement setNullableDate:parameterIndex:@"q":self.ZZFECHAV];
    parameterIndex++;
    [preparedStatement setNullableDate:parameterIndex:@"r":self.ZZNOVEDAD];
	if(self.ZZCODTEM == nil)
		self.ZZCODTEM = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZCODTEM not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"s":self.ZZCODTEM];
	if(self.MTART == nil)
		self.MTART = @"";
		//RHM_Comercial_Articulos getUpdateStatement:MTART not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"t":self.MTART];
	if(self.EAN11 == nil)
		self.EAN11 = @"";
		//RHM_Comercial_Articulos getUpdateStatement:EAN11 not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"u":self.EAN11];
	if(self.ZZARTCAT == nil)
		self.ZZARTCAT = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZARTCAT not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"v":self.ZZARTCAT];
	if(self.ESTADO_RHM == nil)
		self.ESTADO_RHM = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ESTADO_RHM not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"w":self.ESTADO_RHM];
	if(self.FECHADISP == nil)
		self.FECHADISP = @"";
		//RHM_Comercial_Articulos getUpdateStatement:FECHADISP not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"x":self.FECHADISP];
	if(self.ZZCGMAN == nil)
		self.ZZCGMAN = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZCGMAN not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"y":self.ZZCGMAN];
	if(self.ZZCODAUTC == nil)
		self.ZZCODAUTC = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZCODAUTC not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"z":self.ZZCODAUTC];
	if(self.ZZCIVAVIG == nil)
		self.ZZCIVAVIG = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getUpdateStatement:ZZCIVAVIG not allowed to be null
    parameterIndex++;
    [preparedStatement setDecimal:parameterIndex:@"ba":self.ZZCIVAVIG];
	if(self.ZZSIVAVIG == nil)
		self.ZZSIVAVIG = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getUpdateStatement:ZZSIVAVIG not allowed to be null
    parameterIndex++;
    [preparedStatement setDecimal:parameterIndex:@"bb":self.ZZSIVAVIG];
	if(self.EDICION == nil)
		self.EDICION = @"";
		//RHM_Comercial_Articulos getUpdateStatement:EDICION not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bc":self.EDICION];
    parameterIndex++;
    [preparedStatement setInt:parameterIndex:@"bd":self.TIRAJE_STD];
	if(self.AMBITO == nil)
		self.AMBITO = @"";
		//RHM_Comercial_Articulos getUpdateStatement:AMBITO not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"be":self.AMBITO];
	if(self.ZZIDIOPU == nil)
		self.ZZIDIOPU = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZIDIOPU not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bf":self.ZZIDIOPU];
	if(self.ZZIDIOOR == nil)
		self.ZZIDIOOR = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZIDIOOR not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bg":self.ZZIDIOOR];
	if(self.ZZCATMOV == nil)
		self.ZZCATMOV = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZCATMOV not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bh":self.ZZCATMOV];
	if(self.PRVRE == nil)
		self.PRVRE = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getUpdateStatement:PRVRE not allowed to be null
    parameterIndex++;
    [preparedStatement setDecimal:parameterIndex:@"bi":self.PRVRE];
	if(self.ZZTIPOTAPA == nil)
		self.ZZTIPOTAPA = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZTIPOTAPA not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bj":self.ZZTIPOTAPA];
	if(self.ZZTIPENC == nil)
		self.ZZTIPENC = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZTIPENC not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bl":self.ZZTIPENC];
	if(self.ZZFORMATO == nil)
		self.ZZFORMATO = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZFORMATO not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bm":self.ZZFORMATO];
	if(self.ZZPAGS == nil)
		self.ZZPAGS = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZPAGS not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bn":self.ZZPAGS];
	if(self.LAENG == nil)
		self.LAENG = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getUpdateStatement:LAENG not allowed to be null
    parameterIndex++;
    [preparedStatement setDecimal:parameterIndex:@"bo":self.LAENG];
	if(self.BREIT == nil)
		self.BREIT = [NSNumber numberWithFloat:0.0];
		//RHM_Comercial_Articulos getUpdateStatement:BREIT not allowed to be null
    parameterIndex++;
    [preparedStatement setDecimal:parameterIndex:@"bp":self.BREIT];
	if(self.ZZARTCOL == nil)
		self.ZZARTCOL = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZARTCOL not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bq":self.ZZARTCOL];
	if(self.ZZARTBIB == nil)
		self.ZZARTBIB = @"";
		//RHM_Comercial_Articulos getUpdateStatement:ZZARTBIB not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"br":self.ZZARTBIB];
	if(self.WAERS == nil)
		self.WAERS = @"";
		//RHM_Comercial_Articulos getUpdateStatement:WAERS not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bs":self.WAERS];
	if(self.MEABM == nil)
		self.MEABM = @"";
		//RHM_Comercial_Articulos getUpdateStatement:MEABM not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bt":self.MEABM];
	if(self.IHIVI == nil)
		self.IHIVI = @"";
		//RHM_Comercial_Articulos getUpdateStatement:IHIVI not allowed to be null
    parameterIndex++;
    [preparedStatement setString:parameterIndex:@"bu":self.IHIVI];
    parameterIndex++;
    [preparedStatement setChar:parameterIndex:@"_pc":self->_pendingChange];
    parameterIndex++;
    [preparedStatement setLong:parameterIndex:@"_rp":self->_replayPending];
    parameterIndex++;
    [preparedStatement setLong:parameterIndex:@"_rf":self->_replayFailure];
    parameterIndex++;
    [preparedStatement setLong:parameterIndex:@"_rc":self.replayCounter];
    parameterIndex++;
    [preparedStatement setBoolean:parameterIndex:@"_ds":self.disableSubmit];
    // Fill in values for "where" clause
    parameterIndex++;
    [preparedStatement setBoolean:parameterIndex:@"_pf":self->_pending];
    parameterIndex++;
    [preparedStatement setLong:parameterIndex:@"bv":self.surrogateKey];
	return preparedStatement;
}

- (int64_t)_pk
{
	return [self id];
}

- (int64_t)id
{
    return self.surrogateKey;
}

- (NSString*)keyToString
{
	return [NSString stringWithFormat:@"%d",[self id]];
}

+ (void)importData:(RHM_Comercial_Articulos*)serverEntity:(SUPJsonObject*)jsonObject
{
	NSAutoreleasePool *importDataPool = [[NSAutoreleasePool alloc] init];
	RHM_Comercial_Articulos* serverEntity2 = [RHM_Comercial_Articulos getInstance];
    [serverEntity2 copyAll:serverEntity];
    
    if([serverEntity2 database].callbackHandler)
		[[serverEntity2 database].callbackHandler beforeImport:serverEntity2];
    if([RHM_Comercial_Articulos callbackHandler])
		[[RHM_Comercial_Articulos callbackHandler] beforeImport:serverEntity2];
	
    [serverEntity retain];
    SUPBoolean upsert = !(serverEntity.isDeleted)  && (!serverEntity.isNew) && (!serverEntity.isDirty);
    SUPBoolean create = serverEntity.isNew;
    SUPBoolean update = serverEntity.isDirty;
    SUPBoolean delete = serverEntity.isDeleted;
    
    serverEntity->_pendingChange = NotPending;
    serverEntity.replayPending = 0;
    if(upsert || create)
    {
    	@try
    	{
    		[serverEntity createPending:NO];
    	}
    	@catch(NSException *e)
    	{
    		serverEntity.isDirty = YES;
    		update = YES;
    	}
    } else if(delete)
    {
    	BOOL isCreated = NO;
    	@try
    	{
    		// check to see if server is trying to delete a newly created row
    		[serverEntity createPending:NO];
    		isCreated = YES;
    	}
    	@catch(NSException *e)
    	{
    	}
        [serverEntity deletePending:NO];
        serverEntity->_isDeleted = YES;
        serverEntity.pending = YES;
        serverEntity.pendingChange = PendingDelete;
        if(isCreated) 
        {
            RHM_Comercial_Articulos *clientEntity = [RHM_Comercial_Articulos find:[serverEntity _pk]];
            if(clientEntity != nil && clientEntity.pending)
            {
				[serverEntity refresh];
				serverEntity->_isDeleted = YES;
				serverEntity.replayCounter = 0;
				serverEntity.replayFailure = serverEntity.replayCounter;
            }
			serverEntity->_isNew = YES;
        }
    } 
	if(update)
    {
    	RHM_Comercial_Articulos *clientEntity = [RHM_Comercial_Articulos find:[serverEntity _pk]];
    	if(clientEntity.pending)
    		clientEntity = (RHM_Comercial_Articulos*)clientEntity.downloadState;
        @try 
        {
            [serverEntity merge:clientEntity withJson:jsonObject];
        } @catch(SUPJsonException *je)
        {
            NSException *e = [[NSException alloc] initWithName:@"SUPJsonException" reason:[je message] userInfo:nil];
            @throw e;
        }
        serverEntity.pending = NO;
        [serverEntity updatePending:NO];
        serverEntity.isDirty = YES;
        serverEntity.pending = YES;
        serverEntity.pendingChange = PendingUpdate;
    }
    if(create)
    {
        serverEntity->_isNew = YES;
        serverEntity.pending = YES;
        serverEntity.pendingChange = PendingCreate;
    }
    if([serverEntity database].callbackHandler)
		[[serverEntity database].callbackHandler onImport:serverEntity];
    if([RHM_Comercial_Articulos callbackHandler])
		[[RHM_Comercial_Articulos callbackHandler] onImport:serverEntity];

    [serverEntity release];
   
#ifdef LOGRECORD_ON_IMPORT
	[serverEntity createLogRecord:[SUPLogLevel info] withMessage:@"data import"];
#endif
	[importDataPool drain];
}

+ (RHM_Comercial_Articulos*)load:(int64_t)id
{
	RHM_Comercial_Articulos* entity = [self find:id inTable:MainEntityTable];
	//RHM_Comercial_Articulos* entity = [self find:id];
    if (entity == nil)
    {
		@throw [SUPObjectNotFoundException withMessage:@"-load: in RHM_Comercial_Articulos: entity not found in database"];
    }
    return entity;
}

static SUPEntityMetaData* RHM_Comercial_Articulos_META_DATA;
static BOOL _valid_ = NO;

+ (SUPEntityMetaData*)metaData
{
    if (! (_valid_))
    {
       RHM_Comercial_Articulos_META_DATA = [SUPEntityMetaData getInstance];
       RHM_Comercial_Articulos_META_DATA.id = _ENTITY_NUMBER_FOR_RHM_Comercial_Articulos_;
       RHM_Comercial_Articulos_META_DATA.name = @"Articulos";
       [RHM_Comercial_Articulos_META_DATA setClass:[RHM_Comercial_Articulos class]];

	   RHM_Comercial_Articulos_META_DATA.isClientOnly = NO;

       // Handle attributes
       
       	SUPObjectList *attributes = [SUPObjectList getInstance];
		SUPAttributeMetaData_DC* a_BUKRS = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:1:(SUPString)@"BUKRS":[SUPDataType forName:@"string"]];
		[a_BUKRS setColumn:@"\"a\""];
		[a_BUKRS setMaxLength:4];
		[a_BUKRS setPrecision:0];
		[a_BUKRS setScale:0];
		[a_BUKRS setIsKey:NO];
		SUPAttributeMetaData_DC* a_MATNR = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:2:(SUPString)@"MATNR":[SUPDataType forName:@"string"]];
		[a_MATNR setColumn:@"\"b\""];
		[a_MATNR setMaxLength:18];
		[a_MATNR setPrecision:0];
		[a_MATNR setScale:0];
		[a_MATNR setIsKey:NO];
		SUPAttributeMetaData_DC* a_BOLETIN = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:3:(SUPString)@"BOLETIN":[SUPDataType forName:@"string"]];
		[a_BOLETIN setColumn:@"\"c\""];
		[a_BOLETIN setMaxLength:1];
		[a_BOLETIN setPrecision:0];
		[a_BOLETIN setScale:0];
		[a_BOLETIN setIsKey:NO];
		SUPAttributeMetaData_DC* a_MAKTX = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:4:(SUPString)@"MAKTX":[SUPDataType forName:@"string"]];
		[a_MAKTX setColumn:@"\"d\""];
		[a_MAKTX setMaxLength:40];
		[a_MAKTX setPrecision:0];
		[a_MAKTX setScale:0];
		[a_MAKTX setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZTITMANUS = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:5:(SUPString)@"ZZTITMANUS":[SUPDataType forName:@"string"]];
		[a_ZZTITMANUS setColumn:@"\"e\""];
		[a_ZZTITMANUS setMaxLength:120];
		[a_ZZTITMANUS setPrecision:0];
		[a_ZZTITMANUS setScale:0];
		[a_ZZTITMANUS setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZTITULO = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:6:(SUPString)@"ZZTITULO":[SUPDataType forName:@"string"]];
		[a_ZZTITULO setColumn:@"\"f\""];
		[a_ZZTITULO setMaxLength:120];
		[a_ZZTITULO setPrecision:0];
		[a_ZZTITULO setScale:0];
		[a_ZZTITULO setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZSUBTIT = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:7:(SUPString)@"ZZSUBTIT":[SUPDataType forName:@"string"]];
		[a_ZZSUBTIT setColumn:@"\"g\""];
		[a_ZZSUBTIT setMaxLength:80];
		[a_ZZSUBTIT setPrecision:0];
		[a_ZZSUBTIT setScale:0];
		[a_ZZSUBTIT setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZDADVE = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:8:(SUPString)@"ZZDADVE":[SUPDataType forName:@"string"]];
		[a_ZZDADVE setColumn:@"\"h\""];
		[a_ZZDADVE setMaxLength:3];
		[a_ZZDADVE setPrecision:0];
		[a_ZZDADVE setScale:0];
		[a_ZZDADVE setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZSELLO = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:9:(SUPString)@"ZZSELLO":[SUPDataType forName:@"string"]];
		[a_ZZSELLO setColumn:@"\"i\""];
		[a_ZZSELLO setMaxLength:3];
		[a_ZZSELLO setPrecision:0];
		[a_ZZSELLO setScale:0];
		[a_ZZSELLO setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZLINEA = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:10:(SUPString)@"ZZLINEA":[SUPDataType forName:@"string"]];
		[a_ZZLINEA setColumn:@"\"j\""];
		[a_ZZLINEA setMaxLength:6];
		[a_ZZLINEA setPrecision:0];
		[a_ZZLINEA setScale:0];
		[a_ZZLINEA setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCOLECCION = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:11:(SUPString)@"ZZCOLECCION":[SUPDataType forName:@"string"]];
		[a_ZZCOLECCION setColumn:@"\"l\""];
		[a_ZZCOLECCION setMaxLength:6];
		[a_ZZCOLECCION setPrecision:0];
		[a_ZZCOLECCION setScale:0];
		[a_ZZCOLECCION setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCODNEG = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:12:(SUPString)@"ZZCODNEG":[SUPDataType forName:@"string"]];
		[a_ZZCODNEG setColumn:@"\"m\""];
		[a_ZZCODNEG setMaxLength:3];
		[a_ZZCODNEG setPrecision:0];
		[a_ZZCODNEG setScale:0];
		[a_ZZCODNEG setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZDACED = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:13:(SUPString)@"ZZDACED":[SUPDataType forName:@"string"]];
		[a_ZZDACED setColumn:@"\"n\""];
		[a_ZZDACED setMaxLength:1];
		[a_ZZDACED setPrecision:0];
		[a_ZZDACED setScale:0];
		[a_ZZDACED setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZNAJE = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:14:(SUPString)@"ZZNAJE":[SUPDataType forName:@"string"]];
		[a_ZZNAJE setColumn:@"\"o\""];
		[a_ZZNAJE setMaxLength:4];
		[a_ZZNAJE setPrecision:0];
		[a_ZZNAJE setScale:0];
		[a_ZZNAJE setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZDATGE = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:15:(SUPString)@"ZZDATGE":[SUPDataType forName:@"string"]];
		[a_ZZDATGE setColumn:@"\"p\""];
		[a_ZZDATGE setMaxLength:3];
		[a_ZZDATGE setPrecision:0];
		[a_ZZDATGE setScale:0];
		[a_ZZDATGE setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZFECHAV = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:16:(SUPString)@"ZZFECHAV":[SUPDataType forName:@"date?"]];
		[a_ZZFECHAV setColumn:@"\"q\""];
		[a_ZZFECHAV setMaxLength:-1];
		[a_ZZFECHAV setPrecision:0];
		[a_ZZFECHAV setScale:0];
		[a_ZZFECHAV setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZNOVEDAD = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:17:(SUPString)@"ZZNOVEDAD":[SUPDataType forName:@"date?"]];
		[a_ZZNOVEDAD setColumn:@"\"r\""];
		[a_ZZNOVEDAD setMaxLength:-1];
		[a_ZZNOVEDAD setPrecision:0];
		[a_ZZNOVEDAD setScale:0];
		[a_ZZNOVEDAD setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCODTEM = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:18:(SUPString)@"ZZCODTEM":[SUPDataType forName:@"string"]];
		[a_ZZCODTEM setColumn:@"\"s\""];
		[a_ZZCODTEM setMaxLength:6];
		[a_ZZCODTEM setPrecision:0];
		[a_ZZCODTEM setScale:0];
		[a_ZZCODTEM setIsKey:NO];
		SUPAttributeMetaData_DC* a_MTART = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:19:(SUPString)@"MTART":[SUPDataType forName:@"string"]];
		[a_MTART setColumn:@"\"t\""];
		[a_MTART setMaxLength:4];
		[a_MTART setPrecision:0];
		[a_MTART setScale:0];
		[a_MTART setIsKey:NO];
		SUPAttributeMetaData_DC* a_EAN11 = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:20:(SUPString)@"EAN11":[SUPDataType forName:@"string"]];
		[a_EAN11 setColumn:@"\"u\""];
		[a_EAN11 setMaxLength:18];
		[a_EAN11 setPrecision:0];
		[a_EAN11 setScale:0];
		[a_EAN11 setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZARTCAT = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:21:(SUPString)@"ZZARTCAT":[SUPDataType forName:@"string"]];
		[a_ZZARTCAT setColumn:@"\"v\""];
		[a_ZZARTCAT setMaxLength:1];
		[a_ZZARTCAT setPrecision:0];
		[a_ZZARTCAT setScale:0];
		[a_ZZARTCAT setIsKey:NO];
		SUPAttributeMetaData_DC* a_ESTADO_RHM = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:22:(SUPString)@"ESTADO_RHM":[SUPDataType forName:@"string"]];
		[a_ESTADO_RHM setColumn:@"\"w\""];
		[a_ESTADO_RHM setMaxLength:2];
		[a_ESTADO_RHM setPrecision:0];
		[a_ESTADO_RHM setScale:0];
		[a_ESTADO_RHM setIsKey:NO];
		SUPAttributeMetaData_DC* a_FECHADISP = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:23:(SUPString)@"FECHADISP":[SUPDataType forName:@"string"]];
		[a_FECHADISP setColumn:@"\"x\""];
		[a_FECHADISP setMaxLength:8];
		[a_FECHADISP setPrecision:0];
		[a_FECHADISP setScale:0];
		[a_FECHADISP setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCGMAN = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:24:(SUPString)@"ZZCGMAN":[SUPDataType forName:@"string"]];
		[a_ZZCGMAN setColumn:@"\"y\""];
		[a_ZZCGMAN setMaxLength:10];
		[a_ZZCGMAN setPrecision:0];
		[a_ZZCGMAN setScale:0];
		[a_ZZCGMAN setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCODAUTC = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:25:(SUPString)@"ZZCODAUTC":[SUPDataType forName:@"string"]];
		[a_ZZCODAUTC setColumn:@"\"z\""];
		[a_ZZCODAUTC setMaxLength:30];
		[a_ZZCODAUTC setPrecision:0];
		[a_ZZCODAUTC setScale:0];
		[a_ZZCODAUTC setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCIVAVIG = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:26:(SUPString)@"ZZCIVAVIG":[SUPDataType forName:@"decimal"]];
		[a_ZZCIVAVIG setColumn:@"\"ba\""];
		[a_ZZCIVAVIG setMaxLength:-1];
		[a_ZZCIVAVIG setPrecision:28];
		[a_ZZCIVAVIG setScale:8];
		[a_ZZCIVAVIG setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZSIVAVIG = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:27:(SUPString)@"ZZSIVAVIG":[SUPDataType forName:@"decimal"]];
		[a_ZZSIVAVIG setColumn:@"\"bb\""];
		[a_ZZSIVAVIG setMaxLength:-1];
		[a_ZZSIVAVIG setPrecision:28];
		[a_ZZSIVAVIG setScale:8];
		[a_ZZSIVAVIG setIsKey:NO];
		SUPAttributeMetaData_DC* a_EDICION = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:28:(SUPString)@"EDICION":[SUPDataType forName:@"string"]];
		[a_EDICION setColumn:@"\"bc\""];
		[a_EDICION setMaxLength:3];
		[a_EDICION setPrecision:0];
		[a_EDICION setScale:0];
		[a_EDICION setIsKey:NO];
		SUPAttributeMetaData_DC* a_TIRAJE_STD = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:29:(SUPString)@"TIRAJE_STD":[SUPDataType forName:@"int"]];
		[a_TIRAJE_STD setColumn:@"\"bd\""];
		[a_TIRAJE_STD setMaxLength:-1];
		[a_TIRAJE_STD setPrecision:0];
		[a_TIRAJE_STD setScale:0];
		[a_TIRAJE_STD setIsKey:NO];
		SUPAttributeMetaData_DC* a_AMBITO = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:30:(SUPString)@"AMBITO":[SUPDataType forName:@"string"]];
		[a_AMBITO setColumn:@"\"be\""];
		[a_AMBITO setMaxLength:2];
		[a_AMBITO setPrecision:0];
		[a_AMBITO setScale:0];
		[a_AMBITO setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZIDIOPU = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:31:(SUPString)@"ZZIDIOPU":[SUPDataType forName:@"string"]];
		[a_ZZIDIOPU setColumn:@"\"bf\""];
		[a_ZZIDIOPU setMaxLength:1];
		[a_ZZIDIOPU setPrecision:0];
		[a_ZZIDIOPU setScale:0];
		[a_ZZIDIOPU setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZIDIOOR = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:32:(SUPString)@"ZZIDIOOR":[SUPDataType forName:@"string"]];
		[a_ZZIDIOOR setColumn:@"\"bg\""];
		[a_ZZIDIOOR setMaxLength:1];
		[a_ZZIDIOOR setPrecision:0];
		[a_ZZIDIOOR setScale:0];
		[a_ZZIDIOOR setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZCATMOV = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:33:(SUPString)@"ZZCATMOV":[SUPDataType forName:@"string"]];
		[a_ZZCATMOV setColumn:@"\"bh\""];
		[a_ZZCATMOV setMaxLength:1];
		[a_ZZCATMOV setPrecision:0];
		[a_ZZCATMOV setScale:0];
		[a_ZZCATMOV setIsKey:NO];
		SUPAttributeMetaData_DC* a_PRVRE = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:34:(SUPString)@"PRVRE":[SUPDataType forName:@"decimal"]];
		[a_PRVRE setColumn:@"\"bi\""];
		[a_PRVRE setMaxLength:-1];
		[a_PRVRE setPrecision:28];
		[a_PRVRE setScale:8];
		[a_PRVRE setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZTIPOTAPA = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:35:(SUPString)@"ZZTIPOTAPA":[SUPDataType forName:@"string"]];
		[a_ZZTIPOTAPA setColumn:@"\"bj\""];
		[a_ZZTIPOTAPA setMaxLength:2];
		[a_ZZTIPOTAPA setPrecision:0];
		[a_ZZTIPOTAPA setScale:0];
		[a_ZZTIPOTAPA setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZTIPENC = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:36:(SUPString)@"ZZTIPENC":[SUPDataType forName:@"string"]];
		[a_ZZTIPENC setColumn:@"\"bl\""];
		[a_ZZTIPENC setMaxLength:1];
		[a_ZZTIPENC setPrecision:0];
		[a_ZZTIPENC setScale:0];
		[a_ZZTIPENC setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZFORMATO = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:37:(SUPString)@"ZZFORMATO":[SUPDataType forName:@"string"]];
		[a_ZZFORMATO setColumn:@"\"bm\""];
		[a_ZZFORMATO setMaxLength:2];
		[a_ZZFORMATO setPrecision:0];
		[a_ZZFORMATO setScale:0];
		[a_ZZFORMATO setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZPAGS = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:38:(SUPString)@"ZZPAGS":[SUPDataType forName:@"string"]];
		[a_ZZPAGS setColumn:@"\"bn\""];
		[a_ZZPAGS setMaxLength:4];
		[a_ZZPAGS setPrecision:0];
		[a_ZZPAGS setScale:0];
		[a_ZZPAGS setIsKey:NO];
		SUPAttributeMetaData_DC* a_LAENG = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:39:(SUPString)@"LAENG":[SUPDataType forName:@"decimal"]];
		[a_LAENG setColumn:@"\"bo\""];
		[a_LAENG setMaxLength:-1];
		[a_LAENG setPrecision:28];
		[a_LAENG setScale:8];
		[a_LAENG setIsKey:NO];
		SUPAttributeMetaData_DC* a_BREIT = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:40:(SUPString)@"BREIT":[SUPDataType forName:@"decimal"]];
		[a_BREIT setColumn:@"\"bp\""];
		[a_BREIT setMaxLength:-1];
		[a_BREIT setPrecision:28];
		[a_BREIT setScale:8];
		[a_BREIT setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZARTCOL = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:41:(SUPString)@"ZZARTCOL":[SUPDataType forName:@"string"]];
		[a_ZZARTCOL setColumn:@"\"bq\""];
		[a_ZZARTCOL setMaxLength:3];
		[a_ZZARTCOL setPrecision:0];
		[a_ZZARTCOL setScale:0];
		[a_ZZARTCOL setIsKey:NO];
		SUPAttributeMetaData_DC* a_ZZARTBIB = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:42:(SUPString)@"ZZARTBIB":[SUPDataType forName:@"string"]];
		[a_ZZARTBIB setColumn:@"\"br\""];
		[a_ZZARTBIB setMaxLength:3];
		[a_ZZARTBIB setPrecision:0];
		[a_ZZARTBIB setScale:0];
		[a_ZZARTBIB setIsKey:NO];
		SUPAttributeMetaData_DC* a_WAERS = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:43:(SUPString)@"WAERS":[SUPDataType forName:@"string"]];
		[a_WAERS setColumn:@"\"bs\""];
		[a_WAERS setMaxLength:5];
		[a_WAERS setPrecision:0];
		[a_WAERS setScale:0];
		[a_WAERS setIsKey:NO];
		SUPAttributeMetaData_DC* a_MEABM = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:44:(SUPString)@"MEABM":[SUPDataType forName:@"string"]];
		[a_MEABM setColumn:@"\"bt\""];
		[a_MEABM setMaxLength:3];
		[a_MEABM setPrecision:0];
		[a_MEABM setScale:0];
		[a_MEABM setIsKey:NO];
		SUPAttributeMetaData_DC* a_IHIVI = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:45:(SUPString)@"IHIVI":[SUPDataType forName:@"string"]];
		[a_IHIVI setColumn:@"\"bu\""];
		[a_IHIVI setMaxLength:1];
		[a_IHIVI setPrecision:0];
		[a_IHIVI setScale:0];
		[a_IHIVI setIsKey:NO];
		SUPAttributeMetaData_DC* a_pending = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:46:(SUPString)@"pending":[SUPDataType forName:@"boolean"]];
		[a_pending setColumn:@"\"_pf\""];
		[a_pending setMaxLength:-1];
		[a_pending setPrecision:0];
		[a_pending setScale:0];
		[a_pending setIsKey:NO];
		SUPAttributeMetaData_DC* a_pendingChange = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:47:(SUPString)@"pendingChange":[SUPDataType forName:@"char"]];
		[a_pendingChange setColumn:@"\"_pc\""];
		[a_pendingChange setMaxLength:1];
		[a_pendingChange setPrecision:0];
		[a_pendingChange setScale:0];
		[a_pendingChange setIsKey:NO];
		SUPAttributeMetaData_DC* a_replayPending = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:48:(SUPString)@"replayPending":[SUPDataType forName:@"long"]];
		[a_replayPending setColumn:@"\"_rp\""];
		[a_replayPending setMaxLength:-1];
		[a_replayPending setPrecision:0];
		[a_replayPending setScale:0];
		[a_replayPending setIsKey:NO];
		SUPAttributeMetaData_DC* a_replayFailure = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:49:(SUPString)@"replayFailure":[SUPDataType forName:@"long"]];
		[a_replayFailure setColumn:@"\"_rf\""];
		[a_replayFailure setMaxLength:-1];
		[a_replayFailure setPrecision:0];
		[a_replayFailure setScale:0];
		[a_replayFailure setIsKey:NO];
		SUPAttributeMetaData_DC* a_surrogateKey = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:50:(SUPString)@"surrogateKey":[SUPDataType forName:@"long"]];
		[a_surrogateKey setColumn:@"\"bv\""];
		[a_surrogateKey setMaxLength:-1];
		[a_surrogateKey setPrecision:0];
		[a_surrogateKey setScale:0];
		[a_surrogateKey setIsKey:YES];
		SUPAttributeMetaData_DC* a_replayCounter = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:51:(SUPString)@"replayCounter":[SUPDataType forName:@"long"]];
		[a_replayCounter setColumn:@"\"_rc\""];
		[a_replayCounter setMaxLength:-1];
		[a_replayCounter setPrecision:0];
		[a_replayCounter setScale:0];
		[a_replayCounter setIsKey:NO];
		SUPAttributeMetaData_DC* a_disableSubmit = [RHM_Comercial_RHM_ComercialDB createAttributeMetaData:52:(SUPString)@"disableSubmit":[SUPDataType forName:@"boolean"]];
		[a_disableSubmit setColumn:@"\"_ds\""];
		[a_disableSubmit setMaxLength:-1];
		[a_disableSubmit setPrecision:0];
		[a_disableSubmit setScale:0];
		[a_disableSubmit setIsKey:NO];
 		
 		[attributes addThis:a_BUKRS];
 		[attributes addThis:a_MATNR];
 		[attributes addThis:a_BOLETIN];
 		[attributes addThis:a_MAKTX];
 		[attributes addThis:a_ZZTITMANUS];
 		[attributes addThis:a_ZZTITULO];
 		[attributes addThis:a_ZZSUBTIT];
 		[attributes addThis:a_ZZDADVE];
 		[attributes addThis:a_ZZSELLO];
 		[attributes addThis:a_ZZLINEA];
 		[attributes addThis:a_ZZCOLECCION];
 		[attributes addThis:a_ZZCODNEG];
 		[attributes addThis:a_ZZDACED];
 		[attributes addThis:a_ZZNAJE];
 		[attributes addThis:a_ZZDATGE];
 		[attributes addThis:a_ZZFECHAV];
 		[attributes addThis:a_ZZNOVEDAD];
 		[attributes addThis:a_ZZCODTEM];
 		[attributes addThis:a_MTART];
 		[attributes addThis:a_EAN11];
 		[attributes addThis:a_ZZARTCAT];
 		[attributes addThis:a_ESTADO_RHM];
 		[attributes addThis:a_FECHADISP];
 		[attributes addThis:a_ZZCGMAN];
 		[attributes addThis:a_ZZCODAUTC];
 		[attributes addThis:a_ZZCIVAVIG];
 		[attributes addThis:a_ZZSIVAVIG];
 		[attributes addThis:a_EDICION];
 		[attributes addThis:a_TIRAJE_STD];
 		[attributes addThis:a_AMBITO];
 		[attributes addThis:a_ZZIDIOPU];
 		[attributes addThis:a_ZZIDIOOR];
 		[attributes addThis:a_ZZCATMOV];
 		[attributes addThis:a_PRVRE];
 		[attributes addThis:a_ZZTIPOTAPA];
 		[attributes addThis:a_ZZTIPENC];
 		[attributes addThis:a_ZZFORMATO];
 		[attributes addThis:a_ZZPAGS];
 		[attributes addThis:a_LAENG];
 		[attributes addThis:a_BREIT];
 		[attributes addThis:a_ZZARTCOL];
 		[attributes addThis:a_ZZARTBIB];
 		[attributes addThis:a_WAERS];
 		[attributes addThis:a_MEABM];
 		[attributes addThis:a_IHIVI];
 		[attributes addThis:a_pending];
 		[attributes addThis:a_pendingChange];
 		[attributes addThis:a_replayPending];
 		[attributes addThis:a_replayFailure];
 		[attributes addThis:a_surrogateKey];
 		[attributes addThis:a_replayCounter];
 		[attributes addThis:a_disableSubmit];
 		RHM_Comercial_Articulos_META_DATA.attributes = attributes;
 		
 		SUPAttributeMap * attributeMap = [SUPAttributeMap getInstance];
    	[attributeMap setAttributes:attributes];
    	RHM_Comercial_Articulos_META_DATA.attributeMap = [attributeMap finishInit];
 
 		// Handle operations
 		SUPOperationMetaData* o_findAll_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:1:(SUPString)@"findAll":[SUPDataType forName:@"Articulos*"]:true];
		[o_findAll_0 setIsStatic:YES];
		[o_findAll_0 setIsCreate:NO];
		[o_findAll_0 setIsUpdate:NO];
		[o_findAll_0 setIsDelete:NO]; 		
 		[o_findAll_0 finishInit];
 		SUPOperationMetaData* o_getPendingObjects_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:2:(SUPString)@"getPendingObjects":[SUPDataType forName:@"Articulos*"]:true];
		[o_getPendingObjects_0 setIsStatic:YES];
		[o_getPendingObjects_0 setIsCreate:NO];
		[o_getPendingObjects_0 setIsUpdate:NO];
		[o_getPendingObjects_0 setIsDelete:NO]; 		
 		[o_getPendingObjects_0 finishInit];
 		SUPOperationMetaData* o_getPendingObjects_1 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:3:(SUPString)@"getPendingObjects":[SUPDataType forName:@"Articulos*"]:true];
  		{
 			SUPObjectList *parameters_list = nil;
 			SUPParameterMetaData* p_getPendingObjects_pendingChange = [RHM_Comercial_RHM_ComercialDB createParameterMetaData:1:(SUPString)@"pendingChange":[SUPDataType forName:@"char"]];
 			parameters_list = [SUPObjectList listWithCapacity:1];
 			[parameters_list addThis:p_getPendingObjects_pendingChange];
 			o_getPendingObjects_1.parameters = parameters_list;

 		}
		[o_getPendingObjects_1 setIsStatic:YES];
		[o_getPendingObjects_1 setIsCreate:NO];
		[o_getPendingObjects_1 setIsUpdate:NO];
		[o_getPendingObjects_1 setIsDelete:NO]; 		
 		[o_getPendingObjects_1 finishInit];
 		SUPOperationMetaData* o_getReplayPendingObjects_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:4:(SUPString)@"getReplayPendingObjects":[SUPDataType forName:@"Articulos*"]:true];
		[o_getReplayPendingObjects_0 setIsStatic:YES];
		[o_getReplayPendingObjects_0 setIsCreate:NO];
		[o_getReplayPendingObjects_0 setIsUpdate:NO];
		[o_getReplayPendingObjects_0 setIsDelete:NO]; 		
 		[o_getReplayPendingObjects_0 finishInit];
 		SUPOperationMetaData* o_refresh_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:5:(SUPString)@"refresh":[SUPDataType forName:@"void"]:true];
		[o_refresh_0 setIsStatic:NO];
		[o_refresh_0 setIsCreate:NO];
		[o_refresh_0 setIsUpdate:NO];
		[o_refresh_0 setIsDelete:NO]; 		
 		[o_refresh_0 finishInit];
 		SUPOperationMetaData* o__pk_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:6:(SUPString)@"_pk":[SUPDataType forName:@"long?"]:true];
		[o__pk_0 setIsStatic:NO];
		[o__pk_0 setIsCreate:NO];
		[o__pk_0 setIsUpdate:NO];
		[o__pk_0 setIsDelete:NO]; 		
 		[o__pk_0 finishInit];
 		SUPOperationMetaData* o_submitPending_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:7:(SUPString)@"submitPending":[SUPDataType forName:@"void"]:true];
		[o_submitPending_0 setIsStatic:NO];
		[o_submitPending_0 setIsCreate:NO];
		[o_submitPending_0 setIsUpdate:NO];
		[o_submitPending_0 setIsDelete:NO]; 		
 		[o_submitPending_0 finishInit];
 		SUPOperationMetaData* o_cancelPending_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:8:(SUPString)@"cancelPending":[SUPDataType forName:@"void"]:true];
		[o_cancelPending_0 setIsStatic:NO];
		[o_cancelPending_0 setIsCreate:NO];
		[o_cancelPending_0 setIsUpdate:NO];
		[o_cancelPending_0 setIsDelete:NO]; 		
 		[o_cancelPending_0 finishInit];
 		SUPOperationMetaData* o_submitPendingOperations_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:9:(SUPString)@"submitPendingOperations":[SUPDataType forName:@"void"]:true];
		[o_submitPendingOperations_0 setIsStatic:YES];
		[o_submitPendingOperations_0 setIsCreate:NO];
		[o_submitPendingOperations_0 setIsUpdate:NO];
		[o_submitPendingOperations_0 setIsDelete:NO]; 		
 		[o_submitPendingOperations_0 finishInit];
 		SUPOperationMetaData* o_cancelPendingOperations_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:10:(SUPString)@"cancelPendingOperations":[SUPDataType forName:@"void"]:true];
		[o_cancelPendingOperations_0 setIsStatic:YES];
		[o_cancelPendingOperations_0 setIsCreate:NO];
		[o_cancelPendingOperations_0 setIsUpdate:NO];
		[o_cancelPendingOperations_0 setIsDelete:NO]; 		
 		[o_cancelPendingOperations_0 finishInit];
 		SUPOperationMetaData* o_save_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:11:(SUPString)@"save":[SUPDataType forName:@"void"]:true];
		[o_save_0 setIsStatic:NO];
		[o_save_0 setIsCreate:NO];
		[o_save_0 setIsUpdate:NO];
		[o_save_0 setIsDelete:NO]; 		
 		[o_save_0 finishInit];
 		SUPOperationMetaData* o_findWithQuery_1 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:12:(SUPString)@"findWithQuery":[SUPDataType forName:@"Articulos*"]:true];
  		{
 			SUPObjectList *parameters_list = nil;
 			SUPParameterMetaData* p_findWithQuery_query = [RHM_Comercial_RHM_ComercialDB createParameterMetaData:1:(SUPString)@"query":[SUPDataType forName:@"com.sybase.persistence.Query"]];
 			parameters_list = [SUPObjectList listWithCapacity:1];
 			[parameters_list addThis:p_findWithQuery_query];
 			o_findWithQuery_1.parameters = parameters_list;

 		}
		[o_findWithQuery_1 setIsStatic:YES];
		[o_findWithQuery_1 setIsCreate:NO];
		[o_findWithQuery_1 setIsUpdate:NO];
		[o_findWithQuery_1 setIsDelete:NO]; 		
 		[o_findWithQuery_1 finishInit];
 		SUPOperationMetaData* o_getSize_1 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:13:(SUPString)@"getSize":[SUPDataType forName:@"int"]:true];
  		{
 			SUPObjectList *parameters_list = nil;
 			SUPParameterMetaData* p_getSize_query = [RHM_Comercial_RHM_ComercialDB createParameterMetaData:1:(SUPString)@"query":[SUPDataType forName:@"com.sybase.persistence.Query"]];
 			parameters_list = [SUPObjectList listWithCapacity:1];
 			[parameters_list addThis:p_getSize_query];
 			o_getSize_1.parameters = parameters_list;

 		}
		[o_getSize_1 setIsStatic:YES];
		[o_getSize_1 setIsCreate:NO];
		[o_getSize_1 setIsUpdate:NO];
		[o_getSize_1 setIsDelete:NO]; 		
 		[o_getSize_1 finishInit];
 		SUPOperationMetaData* o_countReplayPendingObjects_0 = [RHM_Comercial_RHM_ComercialDB createOperationMetaData:14:(SUPString)@"countReplayPendingObjects":[SUPDataType forName:@"int"]:true];
		[o_countReplayPendingObjects_0 setIsStatic:YES];
		[o_countReplayPendingObjects_0 setIsCreate:NO];
		[o_countReplayPendingObjects_0 setIsUpdate:NO];
		[o_countReplayPendingObjects_0 setIsDelete:NO]; 		
 		[o_countReplayPendingObjects_0 finishInit];
 
  		SUPObjectList *operations = [SUPObjectList listWithCapacity:14];
 		[operations addThis:o_findAll_0];
 		[operations addThis:o_getPendingObjects_0];
 		[operations addThis:o_getPendingObjects_1];
 		[operations addThis:o_getReplayPendingObjects_0];
 		[operations addThis:o_refresh_0];
 		[operations addThis:o__pk_0];
 		[operations addThis:o_submitPending_0];
 		[operations addThis:o_cancelPending_0];
 		[operations addThis:o_submitPendingOperations_0];
 		[operations addThis:o_cancelPendingOperations_0];
 		[operations addThis:o_save_0];
 		[operations addThis:o_findWithQuery_1];
 		[operations addThis:o_getSize_1];
 		[operations addThis:o_countReplayPendingObjects_0];
 		RHM_Comercial_Articulos_META_DATA.operations = operations;
 		
		SUPOperationMap *operationMap = [SUPOperationMap getInstance];
		[operationMap setOperations:operations];
		RHM_Comercial_Articulos_META_DATA.operationMap = [operationMap finishInit];
		
		RHM_Comercial_Articulos_META_DATA.table = @"\"rhm_comercial_1_0_articulos\"";

 		[RHM_Comercial_Articulos_META_DATA retain];
     	_valid_ = YES;

	}
	return RHM_Comercial_Articulos_META_DATA;
}

- (void)merge:(RHM_Comercial_Articulos*)entity withJson:(SUPJsonObject*)json
{
	[super merge:entity withJson:json];
    if(![json containsKey:@"BUKRS"] )
    {
    	self.BUKRS = entity.BUKRS;
    }
    else if(![json getString:@"BUKRS"])
    {
    	self.BUKRS = entity.BUKRS;
    }
    if(![json containsKey:@"MATNR"] )
    {
    	self.MATNR = entity.MATNR;
    }
    else if(![json getString:@"MATNR"])
    {
    	self.MATNR = entity.MATNR;
    }
    if(![json containsKey:@"BOLETIN"] )
    {
    	self.BOLETIN = entity.BOLETIN;
    }
    else if(![json getString:@"BOLETIN"])
    {
    	self.BOLETIN = entity.BOLETIN;
    }
    if(![json containsKey:@"MAKTX"] )
    {
    	self.MAKTX = entity.MAKTX;
    }
    else if(![json getString:@"MAKTX"])
    {
    	self.MAKTX = entity.MAKTX;
    }
    if(![json containsKey:@"ZZTITMANUS"] )
    {
    	self.ZZTITMANUS = entity.ZZTITMANUS;
    }
    else if(![json getString:@"ZZTITMANUS"])
    {
    	self.ZZTITMANUS = entity.ZZTITMANUS;
    }
    if(![json containsKey:@"ZZTITULO"] )
    {
    	self.ZZTITULO = entity.ZZTITULO;
    }
    else if(![json getString:@"ZZTITULO"])
    {
    	self.ZZTITULO = entity.ZZTITULO;
    }
    if(![json containsKey:@"ZZSUBTIT"] )
    {
    	self.ZZSUBTIT = entity.ZZSUBTIT;
    }
    else if(![json getString:@"ZZSUBTIT"])
    {
    	self.ZZSUBTIT = entity.ZZSUBTIT;
    }
    if(![json containsKey:@"ZZDADVE"] )
    {
    	self.ZZDADVE = entity.ZZDADVE;
    }
    else if(![json getString:@"ZZDADVE"])
    {
    	self.ZZDADVE = entity.ZZDADVE;
    }
    if(![json containsKey:@"ZZSELLO"] )
    {
    	self.ZZSELLO = entity.ZZSELLO;
    }
    else if(![json getString:@"ZZSELLO"])
    {
    	self.ZZSELLO = entity.ZZSELLO;
    }
    if(![json containsKey:@"ZZLINEA"] )
    {
    	self.ZZLINEA = entity.ZZLINEA;
    }
    else if(![json getString:@"ZZLINEA"])
    {
    	self.ZZLINEA = entity.ZZLINEA;
    }
    if(![json containsKey:@"ZZCOLECCION"] )
    {
    	self.ZZCOLECCION = entity.ZZCOLECCION;
    }
    else if(![json getString:@"ZZCOLECCION"])
    {
    	self.ZZCOLECCION = entity.ZZCOLECCION;
    }
    if(![json containsKey:@"ZZCODNEG"] )
    {
    	self.ZZCODNEG = entity.ZZCODNEG;
    }
    else if(![json getString:@"ZZCODNEG"])
    {
    	self.ZZCODNEG = entity.ZZCODNEG;
    }
    if(![json containsKey:@"ZZDACED"] )
    {
    	self.ZZDACED = entity.ZZDACED;
    }
    else if(![json getString:@"ZZDACED"])
    {
    	self.ZZDACED = entity.ZZDACED;
    }
    if(![json containsKey:@"ZZNAJE"] )
    {
    	self.ZZNAJE = entity.ZZNAJE;
    }
    else if(![json getString:@"ZZNAJE"])
    {
    	self.ZZNAJE = entity.ZZNAJE;
    }
    if(![json containsKey:@"ZZDATGE"] )
    {
    	self.ZZDATGE = entity.ZZDATGE;
    }
    else if(![json getString:@"ZZDATGE"])
    {
    	self.ZZDATGE = entity.ZZDATGE;
    }
    if(![json containsKey:@"ZZFECHAV"] )
    {
    	self.ZZFECHAV = entity.ZZFECHAV;
    }
    else if(![json getNullableDate:@"ZZFECHAV"])
    {
    	self.ZZFECHAV = entity.ZZFECHAV;
    }
    if(![json containsKey:@"ZZNOVEDAD"] )
    {
    	self.ZZNOVEDAD = entity.ZZNOVEDAD;
    }
    else if(![json getNullableDate:@"ZZNOVEDAD"])
    {
    	self.ZZNOVEDAD = entity.ZZNOVEDAD;
    }
    if(![json containsKey:@"ZZCODTEM"] )
    {
    	self.ZZCODTEM = entity.ZZCODTEM;
    }
    else if(![json getString:@"ZZCODTEM"])
    {
    	self.ZZCODTEM = entity.ZZCODTEM;
    }
    if(![json containsKey:@"MTART"] )
    {
    	self.MTART = entity.MTART;
    }
    else if(![json getString:@"MTART"])
    {
    	self.MTART = entity.MTART;
    }
    if(![json containsKey:@"EAN11"] )
    {
    	self.EAN11 = entity.EAN11;
    }
    else if(![json getString:@"EAN11"])
    {
    	self.EAN11 = entity.EAN11;
    }
    if(![json containsKey:@"ZZARTCAT"] )
    {
    	self.ZZARTCAT = entity.ZZARTCAT;
    }
    else if(![json getString:@"ZZARTCAT"])
    {
    	self.ZZARTCAT = entity.ZZARTCAT;
    }
    if(![json containsKey:@"ESTADO_RHM"] )
    {
    	self.ESTADO_RHM = entity.ESTADO_RHM;
    }
    else if(![json getString:@"ESTADO_RHM"])
    {
    	self.ESTADO_RHM = entity.ESTADO_RHM;
    }
    if(![json containsKey:@"FECHADISP"] )
    {
    	self.FECHADISP = entity.FECHADISP;
    }
    else if(![json getString:@"FECHADISP"])
    {
    	self.FECHADISP = entity.FECHADISP;
    }
    if(![json containsKey:@"ZZCGMAN"] )
    {
    	self.ZZCGMAN = entity.ZZCGMAN;
    }
    else if(![json getString:@"ZZCGMAN"])
    {
    	self.ZZCGMAN = entity.ZZCGMAN;
    }
    if(![json containsKey:@"ZZCODAUTC"] )
    {
    	self.ZZCODAUTC = entity.ZZCODAUTC;
    }
    else if(![json getString:@"ZZCODAUTC"])
    {
    	self.ZZCODAUTC = entity.ZZCODAUTC;
    }
    if(![json containsKey:@"ZZCIVAVIG"] )
    {
    	self.ZZCIVAVIG = entity.ZZCIVAVIG;
    }
    else if(![json getDecimal:@"ZZCIVAVIG"])
    {
    	self.ZZCIVAVIG = entity.ZZCIVAVIG;
    }
    if(![json containsKey:@"ZZSIVAVIG"] )
    {
    	self.ZZSIVAVIG = entity.ZZSIVAVIG;
    }
    else if(![json getDecimal:@"ZZSIVAVIG"])
    {
    	self.ZZSIVAVIG = entity.ZZSIVAVIG;
    }
    if(![json containsKey:@"EDICION"] )
    {
    	self.EDICION = entity.EDICION;
    }
    else if(![json getString:@"EDICION"])
    {
    	self.EDICION = entity.EDICION;
    }
    if(![json containsKey:@"TIRAJE_STD"] )
    {
    	self.TIRAJE_STD = entity.TIRAJE_STD;
    }
    else if(![json getInt:@"TIRAJE_STD"])
    {
    	self.TIRAJE_STD = entity.TIRAJE_STD;
    }
    if(![json containsKey:@"AMBITO"] )
    {
    	self.AMBITO = entity.AMBITO;
    }
    else if(![json getString:@"AMBITO"])
    {
    	self.AMBITO = entity.AMBITO;
    }
    if(![json containsKey:@"ZZIDIOPU"] )
    {
    	self.ZZIDIOPU = entity.ZZIDIOPU;
    }
    else if(![json getString:@"ZZIDIOPU"])
    {
    	self.ZZIDIOPU = entity.ZZIDIOPU;
    }
    if(![json containsKey:@"ZZIDIOOR"] )
    {
    	self.ZZIDIOOR = entity.ZZIDIOOR;
    }
    else if(![json getString:@"ZZIDIOOR"])
    {
    	self.ZZIDIOOR = entity.ZZIDIOOR;
    }
    if(![json containsKey:@"ZZCATMOV"] )
    {
    	self.ZZCATMOV = entity.ZZCATMOV;
    }
    else if(![json getString:@"ZZCATMOV"])
    {
    	self.ZZCATMOV = entity.ZZCATMOV;
    }
    if(![json containsKey:@"PRVRE"] )
    {
    	self.PRVRE = entity.PRVRE;
    }
    else if(![json getDecimal:@"PRVRE"])
    {
    	self.PRVRE = entity.PRVRE;
    }
    if(![json containsKey:@"ZZTIPOTAPA"] )
    {
    	self.ZZTIPOTAPA = entity.ZZTIPOTAPA;
    }
    else if(![json getString:@"ZZTIPOTAPA"])
    {
    	self.ZZTIPOTAPA = entity.ZZTIPOTAPA;
    }
    if(![json containsKey:@"ZZTIPENC"] )
    {
    	self.ZZTIPENC = entity.ZZTIPENC;
    }
    else if(![json getString:@"ZZTIPENC"])
    {
    	self.ZZTIPENC = entity.ZZTIPENC;
    }
    if(![json containsKey:@"ZZFORMATO"] )
    {
    	self.ZZFORMATO = entity.ZZFORMATO;
    }
    else if(![json getString:@"ZZFORMATO"])
    {
    	self.ZZFORMATO = entity.ZZFORMATO;
    }
    if(![json containsKey:@"ZZPAGS"] )
    {
    	self.ZZPAGS = entity.ZZPAGS;
    }
    else if(![json getString:@"ZZPAGS"])
    {
    	self.ZZPAGS = entity.ZZPAGS;
    }
    if(![json containsKey:@"LAENG"] )
    {
    	self.LAENG = entity.LAENG;
    }
    else if(![json getDecimal:@"LAENG"])
    {
    	self.LAENG = entity.LAENG;
    }
    if(![json containsKey:@"BREIT"] )
    {
    	self.BREIT = entity.BREIT;
    }
    else if(![json getDecimal:@"BREIT"])
    {
    	self.BREIT = entity.BREIT;
    }
    if(![json containsKey:@"ZZARTCOL"] )
    {
    	self.ZZARTCOL = entity.ZZARTCOL;
    }
    else if(![json getString:@"ZZARTCOL"])
    {
    	self.ZZARTCOL = entity.ZZARTCOL;
    }
    if(![json containsKey:@"ZZARTBIB"] )
    {
    	self.ZZARTBIB = entity.ZZARTBIB;
    }
    else if(![json getString:@"ZZARTBIB"])
    {
    	self.ZZARTBIB = entity.ZZARTBIB;
    }
    if(![json containsKey:@"WAERS"] )
    {
    	self.WAERS = entity.WAERS;
    }
    else if(![json getString:@"WAERS"])
    {
    	self.WAERS = entity.WAERS;
    }
    if(![json containsKey:@"MEABM"] )
    {
    	self.MEABM = entity.MEABM;
    }
    else if(![json getString:@"MEABM"])
    {
    	self.MEABM = entity.MEABM;
    }
    if(![json containsKey:@"IHIVI"] )
    {
    	self.IHIVI = entity.IHIVI;
    }
    else if(![json getString:@"IHIVI"])
    {
    	self.IHIVI = entity.IHIVI;
    }
    if(![json containsKey:@"surrogateKey"] )
    {
    	self.surrogateKey = entity.surrogateKey;
    }
    else if(![json getLong:@"surrogateKey"])
    {
    	self.surrogateKey = entity.surrogateKey;
    }
    if(![json containsKey:@"disableSubmit"] )
    {
    	self.disableSubmit = entity.disableSubmit;
    }
    else if(![json getBoolean:@"disableSubmit"])
    {
    	self.disableSubmit = entity.disableSubmit;
    }
}

+ (RHM_Comercial_Articulos*)getInstance
{
    RHM_Comercial_Articulos* me = [[RHM_Comercial_Articulos alloc] init];
    [me autorelease];
    return me;
}

- (SUPObjectList*)getLogRecords
{
    SUPQuery *query = [SUPQuery getInstance];
    [query from:@"LogRecordImpl":@"a"];
    query.testCriteria = (SUPTestCriteria*)[[SUPAttributeTest match:@"component":@"Articulos"] and:[SUPAttributeTest match:@"entityKey":[self keyToString]]];
    [query orderBy:@"requestId":[SUPSortOrder DESCENDING]];

    RHM_Comercial_LogRecordImplList* list = [RHM_Comercial_LogRecordImpl findWithQuery:query];
    return (SUPObjectList*)list;
}

- (id<SUPLogRecord>)createLogRecord:(int32_t)level withMessage:(NSString*)message
{
    {
        RHM_Comercial_LogRecordImpl *log = [[RHM_Comercial_LogRecordImpl alloc] init];
        //log.level = [NSString stringWithFormat:@"%ld",[SUPLogLevel fromString:level]];
        log.level = level;
        log.message = message;
        log.messageId = [RHM_Comercial_KeyGenerator generateId];
        log.requestId = [NSString stringWithFormat:@"%ld",log.messageId];
        NSDate *timestamp = [NSDate dateWithTimeIntervalSinceNow:0];
        log.timestamp = timestamp;
        log.code = CLIENT_ENTITY_CREATED_LOGRECORD_CODE;
        log.component = @"Articulos";
        log.entityKey = [self keyToString];
        [log save];
        [log autorelease];
        return log;
    }
}

- (void)setAllAttributesFrom:(RHM_Comercial_Articulos*)other
{
	// Child lists are set to nil, to prevent infinite recursion
	// when this method is used inside the bind: method
    	[self setBUKRS:other.BUKRS];
    	[self setMATNR:other.MATNR];
    	[self setBOLETIN:other.BOLETIN];
    	[self setMAKTX:other.MAKTX];
    	[self setZZTITMANUS:other.ZZTITMANUS];
    	[self setZZTITULO:other.ZZTITULO];
    	[self setZZSUBTIT:other.ZZSUBTIT];
    	[self setZZDADVE:other.ZZDADVE];
    	[self setZZSELLO:other.ZZSELLO];
    	[self setZZLINEA:other.ZZLINEA];
    	[self setZZCOLECCION:other.ZZCOLECCION];
    	[self setZZCODNEG:other.ZZCODNEG];
    	[self setZZDACED:other.ZZDACED];
    	[self setZZNAJE:other.ZZNAJE];
    	[self setZZDATGE:other.ZZDATGE];
    	[self setZZFECHAV:other.ZZFECHAV];
    	[self setZZNOVEDAD:other.ZZNOVEDAD];
    	[self setZZCODTEM:other.ZZCODTEM];
    	[self setMTART:other.MTART];
    	[self setEAN11:other.EAN11];
    	[self setZZARTCAT:other.ZZARTCAT];
    	[self setESTADO_RHM:other.ESTADO_RHM];
    	[self setFECHADISP:other.FECHADISP];
    	[self setZZCGMAN:other.ZZCGMAN];
    	[self setZZCODAUTC:other.ZZCODAUTC];
    	[self setZZCIVAVIG:other.ZZCIVAVIG];
    	[self setZZSIVAVIG:other.ZZSIVAVIG];
    	[self setEDICION:other.EDICION];
    	[self setTIRAJE_STD:other.TIRAJE_STD];
    	[self setAMBITO:other.AMBITO];
    	[self setZZIDIOPU:other.ZZIDIOPU];
    	[self setZZIDIOOR:other.ZZIDIOOR];
    	[self setZZCATMOV:other.ZZCATMOV];
    	[self setPRVRE:other.PRVRE];
    	[self setZZTIPOTAPA:other.ZZTIPOTAPA];
    	[self setZZTIPENC:other.ZZTIPENC];
    	[self setZZFORMATO:other.ZZFORMATO];
    	[self setZZPAGS:other.ZZPAGS];
    	[self setLAENG:other.LAENG];
    	[self setBREIT:other.BREIT];
    	[self setZZARTCOL:other.ZZARTCOL];
    	[self setZZARTBIB:other.ZZARTBIB];
    	[self setWAERS:other.WAERS];
    	[self setMEABM:other.MEABM];
    	[self setIHIVI:other.IHIVI];
    	self->_pending = other->_pending;
    	self->_pendingChange = other->_pendingChange;
    	self->_replayPending = other->_replayPending;
    	self->_replayFailure = other->_replayFailure;
    	[self setSurrogateKey:other.surrogateKey];
    	self->_replayCounter = other->_replayCounter;
    	[self setDisableSubmit:other.disableSubmit];
}

+ (NSObject<SUPCallbackHandler>*)callbackHandler
{
	return _callbackHandler;
}

+ (void)registerCallbackHandler:(NSObject<SUPCallbackHandler>*)newCallbackHandler
{
	if(newCallbackHandler != _callbackHandler)
	{
		[_callbackHandler release];
		_callbackHandler = [newCallbackHandler retain];
	}
}

- (void)refresh
{
    if (!self.isNew)
    {
        RHM_Comercial_Articulos* entity = [RHM_Comercial_Articulos load:[self id]];
        [self copyAll:entity];
		if(self.pending && self.pendingChange == PendingCreate)
		{
			self.originalState = self;
		}
		else
		{
			self.originalState = nil;
			self->_originalStateValid = NO;
		}
        _isNew = NO;
        _isDirty = NO;
    }
}



+ (void)replayAccepted:(SUPJsonObject*)headers withContent:(SUPJsonArray*)content
{
	for (id item in content)
    {
        SUPJsonObject* jsonObject = (SUPJsonObject*)(item);
		int64_t key;
		if ([jsonObject containsKey:@"surrogateKey"]) 
		{
			key = [jsonObject getLong:@"surrogateKey"];
		}
		else
		{
		    key = [jsonObject getLong:@"id"];
		}
        if ([headers containsKey:@"log"]) 
        {
            for(SUPJsonObject *o in [headers getArray:@"log"])
			{
				if(![o containsKey:@"entityKey"])
				{
					RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
					entity.surrogateKey = key;
					[o setString:@"entityKey":[entity keyToString]];
					[entity release];
				}
				[RHM_Comercial_RHM_ComercialDB writeLogFromHeader:o:@"Articulos":@"replay"];
			}
        }

        RHM_Comercial_Articulos* clientEntity = [RHM_Comercial_Articulos find:key];
        if( (clientEntity != nil) && (clientEntity.pending) )
        {
            SUPLong server_id = [SUPBindUtil parseLong:[headers getString:@"id"]];
            SUPLong client_rc = [clientEntity replayPending];
            if(client_rc == server_id)
            {
            	// Server has already sent updated records, so delete the pending ones
                SUPChar pendingChange = clientEntity.pendingChange;
                [clientEntity cancelReplayPending:(SUPAbstractEntity*)clientEntity];
				clientEntity->_originalState = nil;
				clientEntity->_originalStateValid = NO;
				clientEntity.pending = YES;
				clientEntity.pendingChange = pendingChange;
				clientEntity->_isNew = (pendingChange == PendingCreate);
				clientEntity->_isDirty = (pendingChange == PendingUpdate);
				clientEntity->_isDeleted = (pendingChange == PendingDelete);
				if([RHM_Comercial_Articulos callbackHandler])
	        		[[RHM_Comercial_Articulos callbackHandler] onReplaySuccess:clientEntity];       
		        if([RHM_Comercial_RHM_ComercialDB callbackHandler])
		        	[[RHM_Comercial_RHM_ComercialDB callbackHandler] onReplaySuccess:clientEntity];
            }
        }
        
    }
}



+ (void)replayRejected:(SUPJsonObject*)headers withContent:(SUPJsonArray*)content
{
    for (id item in content)
    {
        SUPJsonObject* jsonObject = (SUPJsonObject*)(item);
		int64_t key;
		if ([jsonObject containsKey:@"surrogateKey"]) 
		{
			key = [jsonObject getLong:@"surrogateKey"];
		}
		else
		{
		    key = [jsonObject getLong:@"id"];
		}        
        if ([headers containsKey:@"log"]) 
        {
            for(SUPJsonObject *o in [headers getArray:@"log"])
			{
				if(![o containsKey:@"entityKey"])
				{
					RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
					entity.surrogateKey = key;
					[o setString:@"entityKey":[entity keyToString]];
					[entity release];
				}
				[RHM_Comercial_RHM_ComercialDB writeLogFromHeader:o:@"Articulos":@"replay"];
			}
        }
        RHM_Comercial_Articulos* clientEntity = [RHM_Comercial_Articulos find:key]; 
        [clientEntity retain];
        if(clientEntity != nil)
        {
            SUPLong server_id = [SUPBindUtil parseLong:[headers getString:@"id"]];
            SUPLong client_rc = [clientEntity replayCounter];
            if(client_rc == server_id)
            {
	        	RHM_Comercial_Articulos* originalState = (RHM_Comercial_Articulos*)clientEntity.originalState;
	        	SUPChar pendingChange = clientEntity.pendingChange;
            	[clientEntity replayRejected_childcascade];
            	clientEntity.originalState = originalState;
            	clientEntity.pending = YES;
            	clientEntity.pendingChange = pendingChange;
				clientEntity->_isNew = (pendingChange == PendingCreate);
				clientEntity->_isDirty = (pendingChange == PendingUpdate);
				clientEntity->_isDeleted = (pendingChange == PendingDelete);
			    if([RHM_Comercial_Articulos callbackHandler])
			    	[[RHM_Comercial_Articulos callbackHandler] onReplayFailure:clientEntity];
		        if([RHM_Comercial_RHM_ComercialDB callbackHandler])
		        	[[RHM_Comercial_RHM_ComercialDB callbackHandler] onReplayFailure:clientEntity];
            }
        }
        [clientEntity autorelease];
     }
}



-(void)submitPending
{
	[self submitPending1:YES];
}

-(void)submitPendingNoRefresh
{
	[self submitPending1:NO];
}

-(void)submitPending1:(BOOL)doRefresh
{
    id<SUPConnectionWrapper> connection = nil;
    SUPLocalTransaction* transaction = nil;
    BOOL success = NO;
    SUPJsonMessage* message = nil;
    
    [RHM_Comercial_RHM_ComercialDB checkIfSubscribed];
    //if(_disableSubmit)
    //    return;
    //if(_replayPending == _replayCounter) // already submitted
    //	return;
    @try
    {
        message = [[SUPJsonMessage alloc] init];
        [[RHM_Comercial_RHM_ComercialDB dblock] writeLock];    
        connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
        transaction = ([connection inTransaction] ? nil : [RHM_Comercial_RHM_ComercialDB beginTransaction]);
    	if(doRefresh)
	        [self refresh];
        if (self.pending && !self.disableSubmit && (self.replayCounter > self.replayPending))
        {
            SUPJsonObject* headers = [message headers];
            [headers setString:@"pkg":@"RHM_Comercial:1.0"];
            [headers setString:@"mbo":@"Articulos"];
            [headers setString:@"method":@"replay"];
            [headers setString:@"id":[SUPStringUtil toString_long:self.replayCounter]];

			
            [message setContent:[self json:2]];
            
            self.replayFailure = 0;
            self.replayCounter = 0;
            self.replayPending = self.replayCounter;
            [self updatePending:YES];
        }
        if (transaction != nil)
        {
            [transaction commit];
        }
        success = YES;
    }
    @catch (NSException* e)
    {
        if (transaction != nil)
        {
            [transaction rollback];
        }
        success = NO;
        @throw e;
    }
    @finally
    {
        [connection releaseToPool];
        [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
        if(success)
            [RHM_Comercial_RHM_ComercialDB replay:@"Articulos" withId:self.replayCounter withContent:[message content]];
        [message release];
    }
}

- (void)submitPending_save_childcascade:(SUPAbstractEntity*)parent
{
	if([self pending])
	{
		self->_replayCounter = parent->_replayCounter;
		[self updatePending:YES];
    }
}

- (void)submitPending_update_childcascade:(SUPAbstractEntity*)parent
{
    if ([self pending])
    {
        //BOOL isCreate = [self isCreated];
	    self.replayFailure = 0;
	    self.replayPending = self.replayCounter;
	    [self updatePending:YES];
        //if(!isCreate)
        //    [self updateOriginalState];
    }        

}

 
+ (void)submitPendingOperations
{
	[super submitPendingOperations];
}

+ (void)cancelPendingOperations
{
	[super cancelPendingOperations];
}

- (NSString*)toString
{
	NSString* str = [NSString stringWithFormat:@"\
	Articulos = \n\
	    BUKRS = %@,\n\
	    MATNR = %@,\n\
	    BOLETIN = %@,\n\
	    MAKTX = %@,\n\
	    ZZTITMANUS = %@,\n\
	    ZZTITULO = %@,\n\
	    ZZSUBTIT = %@,\n\
	    ZZDADVE = %@,\n\
	    ZZSELLO = %@,\n\
	    ZZLINEA = %@,\n\
	    ZZCOLECCION = %@,\n\
	    ZZCODNEG = %@,\n\
	    ZZDACED = %@,\n\
	    ZZNAJE = %@,\n\
	    ZZDATGE = %@,\n\
	    ZZFECHAV = %@,\n\
	    ZZNOVEDAD = %@,\n\
	    ZZCODTEM = %@,\n\
	    MTART = %@,\n\
	    EAN11 = %@,\n\
	    ZZARTCAT = %@,\n\
	    ESTADO_RHM = %@,\n\
	    FECHADISP = %@,\n\
	    ZZCGMAN = %@,\n\
	    ZZCODAUTC = %@,\n\
	    ZZCIVAVIG = %@,\n\
	    ZZSIVAVIG = %@,\n\
	    EDICION = %@,\n\
	    TIRAJE_STD = %i,\n\
	    AMBITO = %@,\n\
	    ZZIDIOPU = %@,\n\
	    ZZIDIOOR = %@,\n\
	    ZZCATMOV = %@,\n\
	    PRVRE = %@,\n\
	    ZZTIPOTAPA = %@,\n\
	    ZZTIPENC = %@,\n\
	    ZZFORMATO = %@,\n\
	    ZZPAGS = %@,\n\
	    LAENG = %@,\n\
	    BREIT = %@,\n\
	    ZZARTCOL = %@,\n\
	    ZZARTBIB = %@,\n\
	    WAERS = %@,\n\
	    MEABM = %@,\n\
	    IHIVI = %@,\n\
	    pending = %i,\n\
	    pendingChange = %c,\n\
	    replayPending = %qi,\n\
	    replayFailure = %qi,\n\
	    surrogateKey = %qi,\n\
	    replayCounter = %qi,\n\
	    disableSubmit = %i,\n\
	    isNew = %i,\n\
        isDirty = %i,\n\
        isDeleted = %i,\n\
	\n"
    	,self.BUKRS
    	,self.MATNR
    	,self.BOLETIN
    	,self.MAKTX
    	,self.ZZTITMANUS
    	,self.ZZTITULO
    	,self.ZZSUBTIT
    	,self.ZZDADVE
    	,self.ZZSELLO
    	,self.ZZLINEA
    	,self.ZZCOLECCION
    	,self.ZZCODNEG
    	,self.ZZDACED
    	,self.ZZNAJE
    	,self.ZZDATGE
    	,self.ZZFECHAV
    	,self.ZZNOVEDAD
    	,self.ZZCODTEM
    	,self.MTART
    	,self.EAN11
    	,self.ZZARTCAT
    	,self.ESTADO_RHM
    	,self.FECHADISP
    	,self.ZZCGMAN
    	,self.ZZCODAUTC
    	,self.ZZCIVAVIG
    	,self.ZZSIVAVIG
    	,self.EDICION
    	,self.TIRAJE_STD
    	,self.AMBITO
    	,self.ZZIDIOPU
    	,self.ZZIDIOOR
    	,self.ZZCATMOV
    	,self.PRVRE
    	,self.ZZTIPOTAPA
    	,self.ZZTIPENC
    	,self.ZZFORMATO
    	,self.ZZPAGS
    	,self.LAENG
    	,self.BREIT
    	,self.ZZARTCOL
    	,self.ZZARTBIB
    	,self.WAERS
    	,self.MEABM
    	,self.IHIVI
    	,self->_pending
    	,self->_pendingChange
    	,self->_replayPending
    	,self->_replayFailure
    	,self.surrogateKey
    	,self->_replayCounter
    	,self.disableSubmit
		,self.isNew
		,self.isDirty
		,self.isDeleted
	];
	return str;

}

- (NSString*)description
{
	return [self toString];
}

- (void)save
{
    if (self->_isNew)
    {
        [self create];
    }
    else if (self->_isDirty)
    {
        [self update];
    }
}


- (void)createPending:(BOOL)isPending
{
   	id<SUPConnectionWrapper> connection = nil;
    id<SUPStatementWrapper> statement = nil;
    @try
    {
        [[RHM_Comercial_RHM_ComercialDB dblock] writeLock];
    	self->_pending = isPending;
    	if(!isPending)
    	{
    		self->_replayPending = 0;
    		self->_replayFailure = 0;
    	}
    	connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
    	statement = [self getCreateStatement:connection forTable:MainEntityTable];
		[statement executeInsert];
		self->_isNew = NO;
		self->_isDirty = NO;
		self->_isDeleted = NO;
		if (isPending)
		{
			RHM_Comercial_Articulos* originalEntity = (RHM_Comercial_Articulos*)[self originalState];
			if (originalEntity != nil)
			{
				originalEntity.pending = NO;
				id<SUPStatementWrapper> os_statement = [originalEntity getCreateStatement:connection forTable:OriginalStateEntityTable];
				[os_statement executeInsert];
				[os_statement close];					
			}
		}
    	self->_pending = isPending;
	}
	@catch (SUPPersistenceException *spe)
    {
        //MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"createPending",[spe message]);
    	@throw spe;
    }
    @finally
    {
		[statement close];
        [connection releaseToPool];
        [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
    }    
}

- (void)updatePending:(BOOL)isPending
{
   	id<SUPConnectionWrapper> connection = nil;
   	id<SUPStatementWrapper> statement = nil;
    @try
    {
        [[RHM_Comercial_RHM_ComercialDB dblock] writeLock];
    	self->_pending = isPending;
		if(!isPending)
    	{
    		self->_replayPending = 0;
    		self->_replayFailure = 0;
    	}
    	connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
    	statement = [self getUpdateStatement:connection forTable:MainEntityTable];
		[statement executeUpdate:YES];
		self->_isNew = NO;
		self->_isDirty = NO;
		self->_isDeleted = NO;
	}
	@catch (SUPPersistenceException *spe)
    {
        //MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"updatePending",[spe message]);
		@throw spe;
    }
    @finally
    {
		[statement close];
        [connection releaseToPool];
        [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
    }    	
}

- (SUPAbstractEntity*)originalState
{
    if (!self->_originalStateValid)
    {
        self->_originalState = self.pending ? [RHM_Comercial_Articulos find:[self id] inTable:OriginalStateEntityTable] : nil;
        if(self->_originalState == nil && !self.isCreated) self->_originalState = self.downloadState;
        //if(self->_originalState != self) [self->_originalState retain];
        self->_originalStateValid = YES;
    }
    return (SUPAbstractEntity*)(self->_originalState);
}

- (SUPAbstractEntity*)downloadState
{
    if (!self->_downloadStateValid)
    {
        if(self.isNew) 
        {
            self->_downloadState = nil;
        }
        else if(self.pending)
        {
            RHM_Comercial_Articulos *mbo = [RHM_Comercial_Articulos find:[self id]];
            if(mbo)
                self->_downloadState = mbo->_downloadState;
            else
                self->_downloadState = nil;
        }
        else
        {
            self->_downloadState = nil;
        }
        self->_downloadStateValid = YES;
    }
    return (SUPAbstractEntity*)(self->_downloadState);
}


- (void)updateOriginalState
{
   	id<SUPConnectionWrapper> connection = nil;
	id<SUPStatementWrapper> statement = nil;
	BOOL savePending = self->_pending;
    @try
    {
        [[RHM_Comercial_RHM_ComercialDB dblock] writeLock];
    	connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
		self->_pending = NO;
			
		RHM_Comercial_Articulos* os = [RHM_Comercial_Articulos find:[self id] inTable:OriginalStateEntityTable];
		if(os)
		{
			statement = [self getUpdateStatement:connection forTable:OriginalStateEntityTable];
			[statement executeUpdate:YES];
		} else {
			statement = [self getCreateStatement:connection forTable:OriginalStateEntityTable];
			[statement executeInsert];
		}
		self->_originalStateValid = NO;
	}
	@catch (SUPPersistenceException *spe)
	{
		MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"updateOriginalState",[spe message]);
	}
    @finally
    {
		self->_pending = savePending;
		[statement close];
        [connection releaseToPool];
        [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
    }    
    			
}


- (SUPAbstractEntity*)topLevelParent
{
	return self;
}

- (void)update
{
    @throw [SUPNoSuchOperationException getInstance];
}




+ (SUPObjectList*)findAll
{
	return [self findAll:0 take:-1]; 
}


	

+ (SUPObjectList*)findAll:(int32_t)skip take:(int32_t)take
{
	SUPObjectList* result = [[[SUPObjectList alloc] init] autorelease];
	NSMutableString *sql = nil;
	id<SUPStatementWrapper> preparedStatement = nil;
	id<SUPConnectionWrapper> connection = nil;
	id<SUPResultSetWrapper> resultSet = nil;
	
	@try
	{
	    [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
		connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
		sql = [[NSMutableString alloc] initWithCapacity:640];
	    [sql appendString:@"SELECT x.\"a\",x.\"b\",x.\"c\",x.\"d\",x.\"e\",x.\"f\",x.\"g\",x.\"h\",x.\"i\",x.\"j\",x.\"l\",x.\"m\",x.\"n\",x.\"o\",x.\"p\",x.\"q\",x.\"r\",x.\"s\",x.\"t\",x.\"u\",x.\"v\",x.\"w\",x.\"x\",x.\"y\",x.\"z\",x.\"ba\",x.\"bb\",x.\"bc\",x.\"bd\",x.\"be\",x.\"bf\",x.\"bg\",x.\"bh\",x.\"bi\",x.\"bj\",x.\"bl\",x.\"bm\",x.\"bn\",x.\"bo\",x.\"bp\",x.\"bq\",x"
	                            ".\"br\",x.\"bs\",x.\"bt\",x.\"bu\",x.\"_pf\",x.\"_pc\",x.\"_rp\",x.\"_rf\",x.\"bv\",x.\"_rc\",x.\"_ds\" FROM \"rhm_comercial_1_0_articulos\" x where (((x.\"_pf\" = 1 or not exists (select x_os.\"bv\" from \"rhm_comercial_1_0_articulos_os\" x_os where x_os.\"bv\" = x.\"bv\"))))"];
	    if(take != -1)
	        [sql appendFormat:@" limit %i",take];
	    if(skip != 0)
	        [sql appendFormat:@" offset %i",skip];
	
		preparedStatement = [connection prepareStatement:sql];
	            
	    resultSet = [preparedStatement executeQuery];
	    while ([resultSet next])
	    {
	        RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
	        [entity bind:resultSet];
	        [result add:entity];
			[entity release];
	    }
	}
	@catch (SUPPersistenceException *spe)
	{
	    MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"findAll",[spe message]);
	}
	@finally
	{
		[sql release];
		if(resultSet) [resultSet close];
		if(preparedStatement) [preparedStatement close];
	    [connection releaseToPool];
	    [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
	}
	return result;
}



+ (SUPObjectList*)getPendingObjects
{
	return [self getPendingObjects:0 take:-1]; 
}


	

+ (SUPObjectList*)getPendingObjects:(int32_t)skip take:(int32_t)take
{
	SUPObjectList* result = [[[SUPObjectList alloc] init] autorelease];
	NSMutableString *sql = nil;
	id<SUPStatementWrapper> preparedStatement = nil;
	id<SUPConnectionWrapper> connection = nil;
	id<SUPResultSetWrapper> resultSet = nil;
	
	@try
	{
	    [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
		connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
		sql = [[NSMutableString alloc] initWithCapacity:557];
	    [sql appendString:@"select x.\"a\",x.\"b\",x.\"c\",x.\"d\",x.\"e\",x.\"f\",x.\"g\",x.\"h\",x.\"i\",x.\"j\",x.\"l\",x.\"m\",x.\"n\",x.\"o\",x.\"p\",x.\"q\",x.\"r\",x.\"s\",x.\"t\",x.\"u\",x.\"v\",x.\"w\",x.\"x\",x.\"y\",x.\"z\",x.\"ba\",x.\"bb\",x.\"bc\",x.\"bd\",x.\"be\",x.\"bf\",x.\"bg\",x.\"bh\",x.\"bi\",x.\"bj\",x.\"bl\",x.\"bm\",x.\"bn\",x.\"bo\",x.\"bp\",x.\"bq\",x"
	                            ".\"br\",x.\"bs\",x.\"bt\",x.\"bu\",x.\"_pf\",x.\"_pc\",x.\"_rp\",x.\"_rf\",x.\"bv\",x.\"_rc\",x.\"_ds\" from \"rhm_comercial_1_0_articulos\" x where x.\"_pc\" <> \'N\' and x.\"_rc\" != x.\"_rp\""];
	    if(take != -1)
	        [sql appendFormat:@" limit %i",take];
	    if(skip != 0)
	        [sql appendFormat:@" offset %i",skip];
	
		preparedStatement = [connection prepareStatement:sql];
	            
	    resultSet = [preparedStatement executeQuery];
	    while ([resultSet next])
	    {
	        RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
	        [entity bind:resultSet];
	        [result add:entity];
			[entity release];
	    }
	}
	@catch (SUPPersistenceException *spe)
	{
	    MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"getPendingObjects",[spe message]);
	}
	@finally
	{
		[sql release];
		if(resultSet) [resultSet close];
		if(preparedStatement) [preparedStatement close];
	    [connection releaseToPool];
	    [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
	}
	return result;
}



+ (SUPObjectList*)getPendingObjects:(unichar)pendingChange
{
	return [self getPendingObjects:pendingChange skip:0 take:-1]; 
}


	

+ (SUPObjectList*)getPendingObjects:(unichar)pendingChange skip:(int32_t)skip take:(int32_t)take
{
	SUPObjectList* result = [[[SUPObjectList alloc] init] autorelease];
	NSMutableString *sql = nil;
	id<SUPStatementWrapper> preparedStatement = nil;
	id<SUPConnectionWrapper> connection = nil;
	id<SUPResultSetWrapper> resultSet = nil;
	
	@try
	{
	    [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
		connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
		sql = [[NSMutableString alloc] initWithCapacity:552];
	    [sql appendString:@"select x.\"a\",x.\"b\",x.\"c\",x.\"d\",x.\"e\",x.\"f\",x.\"g\",x.\"h\",x.\"i\",x.\"j\",x.\"l\",x.\"m\",x.\"n\",x.\"o\",x.\"p\",x.\"q\",x.\"r\",x.\"s\",x.\"t\",x.\"u\",x.\"v\",x.\"w\",x.\"x\",x.\"y\",x.\"z\",x.\"ba\",x.\"bb\",x.\"bc\",x.\"bd\",x.\"be\",x.\"bf\",x.\"bg\",x.\"bh\",x.\"bi\",x.\"bj\",x.\"bl\",x.\"bm\",x.\"bn\",x.\"bo\",x.\"bp\",x.\"bq\",x"
	                            ".\"br\",x.\"bs\",x.\"bt\",x.\"bu\",x.\"_pf\",x.\"_pc\",x.\"_rp\",x.\"_rf\",x.\"bv\",x.\"_rc\",x.\"_ds\" from \"rhm_comercial_1_0_articulos\" x where x.\"_pc\" = ? and x.\"_rc\" != x.\"_rp\""];
	    if(take != -1)
	        [sql appendFormat:@" limit %i",take];
	    if(skip != 0)
	        [sql appendFormat:@" offset %i",skip];
	
		preparedStatement = [connection prepareStatement:sql];
	            
	    [preparedStatement setChar:1:@"pendingChange":pendingChange];
	    resultSet = [preparedStatement executeQuery];
	    while ([resultSet next])
	    {
	        RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
	        [entity bind:resultSet];
	        [result add:entity];
			[entity release];
	    }
	}
	@catch (SUPPersistenceException *spe)
	{
	    MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"getPendingObjects",[spe message]);
	}
	@finally
	{
		[sql release];
		if(resultSet) [resultSet close];
		if(preparedStatement) [preparedStatement close];
	    [connection releaseToPool];
	    [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
	}
	return result;
}



+ (SUPObjectList*)getReplayPendingObjects
{
	return [self getReplayPendingObjects:0 take:-1]; 
}


	

+ (SUPObjectList*)getReplayPendingObjects:(int32_t)skip take:(int32_t)take
{
	SUPObjectList* result = [[[SUPObjectList alloc] init] autorelease];
	NSMutableString *sql = nil;
	id<SUPStatementWrapper> preparedStatement = nil;
	id<SUPConnectionWrapper> connection = nil;
	id<SUPResultSetWrapper> resultSet = nil;
	
	@try
	{
	    [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
		connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
		sql = [[NSMutableString alloc] initWithCapacity:662];
	    [sql appendString:@"select x.\"a\",x.\"b\",x.\"c\",x.\"d\",x.\"e\",x.\"f\",x.\"g\",x.\"h\",x.\"i\",x.\"j\",x.\"l\",x.\"m\",x.\"n\",x.\"o\",x.\"p\",x.\"q\",x.\"r\",x.\"s\",x.\"t\",x.\"u\",x.\"v\",x.\"w\",x.\"x\",x.\"y\",x.\"z\",x.\"ba\",x.\"bb\",x.\"bc\",x.\"bd\",x.\"be\",x.\"bf\",x.\"bg\",x.\"bh\",x.\"bi\",x.\"bj\",x.\"bl\",x.\"bm\",x.\"bn\",x.\"bo\",x.\"bp\",x.\"bq\",x"
	                            ".\"br\",x.\"bs\",x.\"bt\",x.\"bu\",x.\"_pf\",x.\"_pc\",x.\"_rp\",x.\"_rf\",x.\"bv\",x.\"_rc\",x.\"_ds\" from \"rhm_comercial_1_0_articulos\" x where (((x.\"_pf\" = 1 or not exists (select x_os.\"bv\" from \"rhm_comercial_1_0_articulos_os\" x_os where x_os.\"bv\" = x.\"bv\")))) and ( x.\"_rp\" != 0)"];
	    if(take != -1)
	        [sql appendFormat:@" limit %i",take];
	    if(skip != 0)
	        [sql appendFormat:@" offset %i",skip];
	
		preparedStatement = [connection prepareStatement:sql];
	            
	    resultSet = [preparedStatement executeQuery];
	    while ([resultSet next])
	    {
	        RHM_Comercial_Articulos* entity = [[RHM_Comercial_Articulos alloc] init];
	        [entity bind:resultSet];
	        [result add:entity];
			[entity release];
	    }
	}
	@catch (SUPPersistenceException *spe)
	{
	    MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"getReplayPendingObjects",[spe message]);
	}
	@finally
	{
		[sql release];
		if(resultSet) [resultSet close];
		if(preparedStatement) [preparedStatement close];
	    [connection releaseToPool];
	    [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
	}
	return result;
}

/*!
  @method
  @abstract Generated class method 
  @param query
  @throws SUPPersistenceException
 */
+ (int32_t)getSize:(SUPQuery*)query
{
    return [RHM_Comercial_Articulos countWithQuery:query];
}



+ (int32_t)countReplayPendingObjects
{
	int32_t result;
	NSMutableString *sql = nil;
	id<SUPStatementWrapper> preparedStatement = nil;
	id<SUPConnectionWrapper> connection = nil;
	id<SUPResultSetWrapper> resultSet = nil;
	
	@try
	{
	    [[RHM_Comercial_RHM_ComercialDB dblock] readLock];
		connection = [RHM_Comercial_RHM_ComercialDB getConnectionWrapper];
		sql = [[NSMutableString alloc] initWithCapacity:223];
	    [sql appendString:@"select count(*) ,x.\"bv\" from \"rhm_comercial_1_0_articulos\" x where (((x.\"_pf\" = 1 or not exists (select x_os.\"bv\" from \"rhm_comercial_1_0_articulos_os\" x_os where x_os.\"bv\" = x.\"bv\")))) and ( x.\"_rp\" != 0)"];
	
		preparedStatement = [connection prepareStatement:sql];
	            
	    resultSet = [preparedStatement executeQuery];
	    while ([resultSet next])
	    {
	        result = [resultSet getInt:1:@""];
	    }
	}
	@catch (SUPPersistenceException *spe)
	{
	    MBOLogPersistenceException(SUPCLIENTRT_TEMPLATE_PERSISTENCEEXCEPTIONMSG,@"countReplayPendingObjects",[spe message]);
	}
	@finally
	{
		[sql release];
		if(resultSet) [resultSet close];
		if(preparedStatement) [preparedStatement close];
	    [connection releaseToPool];
	    [[RHM_Comercial_RHM_ComercialDB dblock] unlock];
	}
	return result;
}

@end